{"version":3,"sources":["webpack://QRCodeStyling/webpack/universalModuleDefinition","webpack://QRCodeStyling/./node_modules/canvas/browser.js","webpack://QRCodeStyling/./node_modules/canvas/lib/parse-font.js","webpack://QRCodeStyling/./node_modules/qrcode-generator/qrcode.js","webpack://QRCodeStyling/./src/tools/merge.ts","webpack://QRCodeStyling/./src/constants/errorCorrectionPercents.ts","webpack://QRCodeStyling/./src/core/QRDot.ts","webpack://QRCodeStyling/./src/constants/dotTypes.ts","webpack://QRCodeStyling/./src/core/QRCornerSquare.ts","webpack://QRCodeStyling/./src/constants/cornerSquareTypes.ts","webpack://QRCodeStyling/./src/core/QRCornerDot.ts","webpack://QRCodeStyling/./src/constants/cornerDotTypes.ts","webpack://QRCodeStyling/./src/core/QRCanvas.ts","webpack://QRCodeStyling/./src/tools/calculateImageSize.ts","webpack://QRCodeStyling/./src/constants/gradientTypes.ts","webpack://QRCodeStyling/./src/constants/qrTypes.ts","webpack://QRCodeStyling/./src/core/QROptions.ts","webpack://QRCodeStyling/./src/constants/errorCorrectionLevels.ts","webpack://QRCodeStyling/./src/tools/sanitizeOptions.ts","webpack://QRCodeStyling/./src/index.ts","webpack://QRCodeStyling/./src/core/QRCodeStyling.ts","webpack://QRCodeStyling/./src/tools/getMode.ts","webpack://QRCodeStyling/./src/constants/modes.ts","webpack://QRCodeStyling/webpack/bootstrap","webpack://QRCodeStyling/webpack/startup","webpack://QRCodeStyling/webpack/runtime/compat get default export","webpack://QRCodeStyling/webpack/runtime/define property getters","webpack://QRCodeStyling/webpack/runtime/hasOwnProperty shorthand"],"names":["root","factory","exports","module","define","amd","this","width","height","Object","assign","document","createElement","src","options","Promise","resolve","reject","image","cleanup","onload","onerror","Error","string","weightRe","RegExp","styleRe","variantRe","stretchRe","sizeFamilyRe","cache","str","sizeFamily","exec","font","weight","style","stretch","variant","size","parseFloat","unit","family","replace","substr","substring","index","qrcode","typeNumber","errorCorrectionLevel","_typeNumber","_errorCorrectionLevel","QRErrorCorrectionLevel","_modules","_moduleCount","_dataCache","_dataList","_this","makeImpl","test","maskPattern","moduleCount","modules","Array","row","col","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","pos","QRUtil","getPatternPosition","i","length","j","bits","getBCHTypeNumber","mod","Math","floor","data","getBCHTypeInfo","inc","bitIndex","byteIndex","maskFunc","getMaskFunction","dark","dataList","rsBlocks","QRRSBlock","getRSBlocks","buffer","qrBitBuffer","put","getMode","getLength","getLengthInBits","write","totalDataCount","dataCount","putBit","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","getBuffer","rsPoly","getErrorCorrectPolynomial","modPoly","qrPolynomial","modIndex","getAt","totalCodeCount","createBytes","addData","mode","newData","qrNumber","qrAlphaNum","qr8BitByte","qrKanji","push","isDark","getModuleCount","make","minLostPoint","pattern","lostPoint","getLostPoint","getBestMaskPattern","createTableTag","cellSize","margin","qrHtml","createSvgTag","alt","title","opts","arguments","text","id","mr","rect","qrSvg","scalable","escapeXml","join","trim","createDataURL","min","x","y","createImgTag","img","s","escaped","charAt","createASCII","r1","r2","p","blocks","blocksLastLineNoMargin","ascii","_createHalfASCII","white","black","line","renderTo2dContext","context","fillStyle","fillRect","stringToBytes","stringToBytesFuncs","bytes","charCodeAt","createStringToBytes","unicodeData","numChars","unicodeMap","bin","base64DecodeInputStream","read","b","count","b0","b1","v","String","fromCharCode","unknownChar","PATTERN_POSITION_TABLE","G15","G18","getBCHDigit","L","M","Q","H","digit","d","errorCorrectLength","a","multiply","QRMath","gexp","type","sameCount","darkCount","abs","EXP_TABLE","LOG_TABLE","n","num","shift","_num","e","glog","ratio","RS_BLOCK_TABLE","qrRSBlock","rsBlock","getRsBlockTable","list","_buffer","_length","bufIndex","bit","_data","strToNum","chatToNum","getCode","_bytes","code","byteArrayOutputStream","writeByte","off","len","_str","_pos","_buflen","match","decode","getPixel","gif","_width","_height","pixel","out","writeString","writeShort","raster","getLZWRaster","writeBytes","lzwMinCodeSize","clearCode","endCode","bitLength","table","lzwTable","add","_out","_bitLength","_bitBuffer","byteOut","bitOut","dataIndex","contains","indexOf","flush","toByteArray","_map","_size","key","gifImage","setPixel","base64","_base64","writeEncoded","encode","padlen","toString","base64EncodeOutputStream","utf8","charcode","toUTF8Array","isObject","obj","isArray","mergeDeep","target","sources","source","undefined","keys","forEach","targetValue","sourceValue","_context","_type","draw","getNeighbor","drawFunction","_drawDot","_drawClassy","_drawClassyRounded","_drawRounded","_drawExtraRounded","_drawSquare","call","_rotateFigure","rotation","cx","cy","translate","rotate","closePath","_basicDot","args","arc","PI","_basicSquare","_basicSideRounded","lineTo","_basicCornerRounded","_basicCornerExtraRounded","_basicCornersRounded","_basicCornersExtraRounded","leftNeighbor","rightNeighbor","topNeighbor","bottomNeighbor","neighborsCount","dotSize","_basicExtraRounded","squareMask","dotMask","_canvas","_options","getContext","getCanvas","clear","canvasContext","clearRect","drawQR","qr","minSize","drawImageSize","hideXDots","hideYDots","_qr","loadImage","_image","imageOptions","qrOptions","coverLevel","imageSize","errorCorrectionPercents","maxHiddenDots","originalHeight","originalWidth","maxHiddenAxisDots","hideDots","k","sqrt","ceil","round","calculateImageSize","drawBackground","drawDots","hideBackgroundDots","drawCorners","drawImage","backgroundOptions","gradient","gradientOptions","_createGradient","additionalRotation","colorStops","color","addColorStop","filter","xBeginning","yBeginning","dot","dotsOptions","beginPath","xOffset","yOffset","strokeStyle","fill","cornersSquareSize","cornersDotSize","column","cornersSquareOptions","cornersSquare","cornersDotOptions","cornersDot","dx","dy","dw","dh","createRadialGradient","positiveRotation","x0","y0","x1","y1","tan","createLinearGradient","qrTypes","crossOrigin","sanitizeGradient","newGradient","Number","map","colorStop","sanitizeOptions","newOptions","Boolean","toPNGBuffer","toBuffer","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","definition","o","defineProperty","enumerable","get","prop","prototype","hasOwnProperty"],"mappings":"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","file":"qr-code-styling.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"QRCodeStyling\"] = factory();\n\telse\n\t\troot[\"QRCodeStyling\"] = factory();\n})(this, function() {\nreturn ","/* globals document, ImageData */\n\nconst parseFont = require('./lib/parse-font')\n\nexports.parseFont = parseFont\n\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), { width: width, height: height })\n}\n\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0: return new ImageData()\n    case 1: return new ImageData(array)\n    case 2: return new ImageData(array, width)\n    default: return new ImageData(array, width, height)\n  }\n}\n\nexports.loadImage = function (src, options) {\n  return new Promise(function (resolve, reject) {\n    const image = Object.assign(document.createElement('img'), options)\n\n    function cleanup () {\n      image.onload = null\n      image.onerror = null\n    }\n\n    image.onload = function () { cleanup(); resolve(image) }\n    image.onerror = function () { cleanup(); reject(new Error('Failed to load the image \"' + src + '\"')) }\n\n    image.src = src\n  })\n}\n","'use strict'\n\n/**\n * Font RegExp helpers.\n */\n\nconst weights = 'bold|bolder|lighter|[1-9]00'\n  , styles = 'italic|oblique'\n  , variants = 'small-caps'\n  , stretches = 'ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded'\n  , units = 'px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q'\n  , string = '\\'([^\\']+)\\'|\"([^\"]+)\"|[\\\\w\\\\s-]+'\n\n// [ [ <‘font-style’> || <font-variant-css21> || <‘font-weight’> || <‘font-stretch’> ]?\n//    <‘font-size’> [ / <‘line-height’> ]? <‘font-family’> ]\n// https://drafts.csswg.org/css-fonts-3/#font-prop\nconst weightRe = new RegExp('(' + weights + ') +', 'i')\nconst styleRe = new RegExp('(' + styles + ') +', 'i')\nconst variantRe = new RegExp('(' + variants + ') +', 'i')\nconst stretchRe = new RegExp('(' + stretches + ') +', 'i')\nconst sizeFamilyRe = new RegExp(\n  '([\\\\d\\\\.]+)(' + units + ') *'\n  + '((?:' + string + ')( *, *(?:' + string + '))*)')\n\n/**\n * Cache font parsing.\n */\n\nconst cache = {}\n\nconst defaultHeight = 16 // pt, common browser default\n\n/**\n * Parse font `str`.\n *\n * @param {String} str\n * @return {Object} Parsed font. `size` is in device units. `unit` is the unit\n *   appearing in the input string.\n * @api private\n */\n\nmodule.exports = function (str) {\n  // Cached\n  if (cache[str]) return cache[str]\n\n  // Try for required properties first.\n  const sizeFamily = sizeFamilyRe.exec(str)\n  if (!sizeFamily) return // invalid\n\n  // Default values and required properties\n  const font = {\n    weight: 'normal',\n    style: 'normal',\n    stretch: 'normal',\n    variant: 'normal',\n    size: parseFloat(sizeFamily[1]),\n    unit: sizeFamily[2],\n    family: sizeFamily[3].replace(/[\"']/g, '').replace(/ *, */g, ',')\n  }\n\n  // Optional, unordered properties.\n  let weight, style, variant, stretch\n  // Stop search at `sizeFamily.index`\n  let substr = str.substring(0, sizeFamily.index)\n  if ((weight = weightRe.exec(substr))) font.weight = weight[1]\n  if ((style = styleRe.exec(substr))) font.style = style[1]\n  if ((variant = variantRe.exec(substr))) font.variant = variant[1]\n  if ((stretch = stretchRe.exec(substr))) font.stretch = stretch[1]\n\n  // Convert to device units. (`font.unit` is the original unit)\n  // TODO: ch, ex\n  switch (font.unit) {\n    case 'pt':\n      font.size /= 0.75\n      break\n    case 'pc':\n      font.size *= 16\n      break\n    case 'in':\n      font.size *= 96\n      break\n    case 'cm':\n      font.size *= 96.0 / 2.54\n      break\n    case 'mm':\n      font.size *= 96.0 / 25.4\n      break\n    case '%':\n      // TODO disabled because existing unit tests assume 100\n      // font.size *= defaultHeight / 100 / 0.75\n      break\n    case 'em':\n    case 'rem':\n      font.size *= defaultHeight / 0.75\n      break\n    case 'q':\n      font.size *= 96 / 25.4 / 4\n      break\n  }\n\n  return (cache[str] = font)\n}\n","//---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nvar qrcode = function() {\n\n  //---------------------------------------------------------------------\n  // qrcode\n  //---------------------------------------------------------------------\n\n  /**\n   * qrcode\n   * @param typeNumber 1 to 40\n   * @param errorCorrectionLevel 'L','M','Q','H'\n   */\n  var qrcode = function(typeNumber, errorCorrectionLevel) {\n\n    var PAD0 = 0xEC;\n    var PAD1 = 0x11;\n\n    var _typeNumber = typeNumber;\n    var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n    var _modules = null;\n    var _moduleCount = 0;\n    var _dataCache = null;\n    var _dataList = [];\n\n    var _this = {};\n\n    var makeImpl = function(test, maskPattern) {\n\n      _moduleCount = _typeNumber * 4 + 17;\n      _modules = function(moduleCount) {\n        var modules = new Array(moduleCount);\n        for (var row = 0; row < moduleCount; row += 1) {\n          modules[row] = new Array(moduleCount);\n          for (var col = 0; col < moduleCount; col += 1) {\n            modules[row][col] = null;\n          }\n        }\n        return modules;\n      }(_moduleCount);\n\n      setupPositionProbePattern(0, 0);\n      setupPositionProbePattern(_moduleCount - 7, 0);\n      setupPositionProbePattern(0, _moduleCount - 7);\n      setupPositionAdjustPattern();\n      setupTimingPattern();\n      setupTypeInfo(test, maskPattern);\n\n      if (_typeNumber >= 7) {\n        setupTypeNumber(test);\n      }\n\n      if (_dataCache == null) {\n        _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n      }\n\n      mapData(_dataCache, maskPattern);\n    };\n\n    var setupPositionProbePattern = function(row, col) {\n\n      for (var r = -1; r <= 7; r += 1) {\n\n        if (row + r <= -1 || _moduleCount <= row + r) continue;\n\n        for (var c = -1; c <= 7; c += 1) {\n\n          if (col + c <= -1 || _moduleCount <= col + c) continue;\n\n          if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n              || (0 <= c && c <= 6 && (r == 0 || r == 6) )\n              || (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n            _modules[row + r][col + c] = true;\n          } else {\n            _modules[row + r][col + c] = false;\n          }\n        }\n      }\n    };\n\n    var getBestMaskPattern = function() {\n\n      var minLostPoint = 0;\n      var pattern = 0;\n\n      for (var i = 0; i < 8; i += 1) {\n\n        makeImpl(true, i);\n\n        var lostPoint = QRUtil.getLostPoint(_this);\n\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint;\n          pattern = i;\n        }\n      }\n\n      return pattern;\n    };\n\n    var setupTimingPattern = function() {\n\n      for (var r = 8; r < _moduleCount - 8; r += 1) {\n        if (_modules[r][6] != null) {\n          continue;\n        }\n        _modules[r][6] = (r % 2 == 0);\n      }\n\n      for (var c = 8; c < _moduleCount - 8; c += 1) {\n        if (_modules[6][c] != null) {\n          continue;\n        }\n        _modules[6][c] = (c % 2 == 0);\n      }\n    };\n\n    var setupPositionAdjustPattern = function() {\n\n      var pos = QRUtil.getPatternPosition(_typeNumber);\n\n      for (var i = 0; i < pos.length; i += 1) {\n\n        for (var j = 0; j < pos.length; j += 1) {\n\n          var row = pos[i];\n          var col = pos[j];\n\n          if (_modules[row][col] != null) {\n            continue;\n          }\n\n          for (var r = -2; r <= 2; r += 1) {\n\n            for (var c = -2; c <= 2; c += 1) {\n\n              if (r == -2 || r == 2 || c == -2 || c == 2\n                  || (r == 0 && c == 0) ) {\n                _modules[row + r][col + c] = true;\n              } else {\n                _modules[row + r][col + c] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    var setupTypeNumber = function(test) {\n\n      var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\n      }\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n      }\n    };\n\n    var setupTypeInfo = function(test, maskPattern) {\n\n      var data = (_errorCorrectionLevel << 3) | maskPattern;\n      var bits = QRUtil.getBCHTypeInfo(data);\n\n      // vertical\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 6) {\n          _modules[i][8] = mod;\n        } else if (i < 8) {\n          _modules[i + 1][8] = mod;\n        } else {\n          _modules[_moduleCount - 15 + i][8] = mod;\n        }\n      }\n\n      // horizontal\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 8) {\n          _modules[8][_moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n          _modules[8][15 - i - 1 + 1] = mod;\n        } else {\n          _modules[8][15 - i - 1] = mod;\n        }\n      }\n\n      // fixed module\n      _modules[_moduleCount - 8][8] = (!test);\n    };\n\n    var mapData = function(data, maskPattern) {\n\n      var inc = -1;\n      var row = _moduleCount - 1;\n      var bitIndex = 7;\n      var byteIndex = 0;\n      var maskFunc = QRUtil.getMaskFunction(maskPattern);\n\n      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n\n        if (col == 6) col -= 1;\n\n        while (true) {\n\n          for (var c = 0; c < 2; c += 1) {\n\n            if (_modules[row][col - c] == null) {\n\n              var dark = false;\n\n              if (byteIndex < data.length) {\n                dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n              }\n\n              var mask = maskFunc(row, col - c);\n\n              if (mask) {\n                dark = !dark;\n              }\n\n              _modules[row][col - c] = dark;\n              bitIndex -= 1;\n\n              if (bitIndex == -1) {\n                byteIndex += 1;\n                bitIndex = 7;\n              }\n            }\n          }\n\n          row += inc;\n\n          if (row < 0 || _moduleCount <= row) {\n            row -= inc;\n            inc = -inc;\n            break;\n          }\n        }\n      }\n    };\n\n    var createBytes = function(buffer, rsBlocks) {\n\n      var offset = 0;\n\n      var maxDcCount = 0;\n      var maxEcCount = 0;\n\n      var dcdata = new Array(rsBlocks.length);\n      var ecdata = new Array(rsBlocks.length);\n\n      for (var r = 0; r < rsBlocks.length; r += 1) {\n\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n\n        dcdata[r] = new Array(dcCount);\n\n        for (var i = 0; i < dcdata[r].length; i += 1) {\n          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\n        }\n        offset += dcCount;\n\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i += 1) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n          ecdata[r][i] = (modIndex >= 0)? modPoly.getAt(modIndex) : 0;\n        }\n      }\n\n      var totalCodeCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalCodeCount += rsBlocks[i].totalCount;\n      }\n\n      var data = new Array(totalCodeCount);\n      var index = 0;\n\n      for (var i = 0; i < maxDcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < dcdata[r].length) {\n            data[index] = dcdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      for (var i = 0; i < maxEcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < ecdata[r].length) {\n            data[index] = ecdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var createData = function(typeNumber, errorCorrectionLevel, dataList) {\n\n      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectionLevel);\n\n      var buffer = qrBitBuffer();\n\n      for (var i = 0; i < dataList.length; i += 1) {\n        var data = dataList[i];\n        buffer.put(data.getMode(), 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n        data.write(buffer);\n      }\n\n      // calc num max data.\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw 'code length overflow. ('\n          + buffer.getLengthInBits()\n          + '>'\n          + totalDataCount * 8\n          + ')';\n      }\n\n      // end code\n      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n      }\n\n      // padding\n      while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n      }\n\n      // padding\n      while (true) {\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD0, 8);\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD1, 8);\n      }\n\n      return createBytes(buffer, rsBlocks);\n    };\n\n    _this.addData = function(data, mode) {\n\n      mode = mode || 'Byte';\n\n      var newData = null;\n\n      switch(mode) {\n      case 'Numeric' :\n        newData = qrNumber(data);\n        break;\n      case 'Alphanumeric' :\n        newData = qrAlphaNum(data);\n        break;\n      case 'Byte' :\n        newData = qr8BitByte(data);\n        break;\n      case 'Kanji' :\n        newData = qrKanji(data);\n        break;\n      default :\n        throw 'mode:' + mode;\n      }\n\n      _dataList.push(newData);\n      _dataCache = null;\n    };\n\n    _this.isDark = function(row, col) {\n      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n        throw row + ',' + col;\n      }\n      return _modules[row][col];\n    };\n\n    _this.getModuleCount = function() {\n      return _moduleCount;\n    };\n\n    _this.make = function() {\n      if (_typeNumber < 1) {\n        var typeNumber = 1;\n\n        for (; typeNumber < 40; typeNumber++) {\n          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, _errorCorrectionLevel);\n          var buffer = qrBitBuffer();\n\n          for (var i = 0; i < _dataList.length; i++) {\n            var data = _dataList[i];\n            buffer.put(data.getMode(), 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n            data.write(buffer);\n          }\n\n          var totalDataCount = 0;\n          for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n          }\n\n          if (buffer.getLengthInBits() <= totalDataCount * 8) {\n            break;\n          }\n        }\n\n        _typeNumber = typeNumber;\n      }\n\n      makeImpl(false, getBestMaskPattern() );\n    };\n\n    _this.createTableTag = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var qrHtml = '';\n\n      qrHtml += '<table style=\"';\n      qrHtml += ' border-width: 0px; border-style: none;';\n      qrHtml += ' border-collapse: collapse;';\n      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';\n      qrHtml += '\">';\n      qrHtml += '<tbody>';\n\n      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n\n        qrHtml += '<tr>';\n\n        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n          qrHtml += '<td style=\"';\n          qrHtml += ' border-width: 0px; border-style: none;';\n          qrHtml += ' border-collapse: collapse;';\n          qrHtml += ' padding: 0px; margin: 0px;';\n          qrHtml += ' width: ' + cellSize + 'px;';\n          qrHtml += ' height: ' + cellSize + 'px;';\n          qrHtml += ' background-color: ';\n          qrHtml += _this.isDark(r, c)? '#000000' : '#ffffff';\n          qrHtml += ';';\n          qrHtml += '\"/>';\n        }\n\n        qrHtml += '</tr>';\n      }\n\n      qrHtml += '</tbody>';\n      qrHtml += '</table>';\n\n      return qrHtml;\n    };\n\n    _this.createSvgTag = function(cellSize, margin, alt, title) {\n\n      var opts = {};\n      if (typeof arguments[0] == 'object') {\n        // Called by options.\n        opts = arguments[0];\n        // overwrite cellSize and margin.\n        cellSize = opts.cellSize;\n        margin = opts.margin;\n        alt = opts.alt;\n        title = opts.title;\n      }\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      // Compose alt property surrogate\n      alt = (typeof alt === 'string') ? {text: alt} : alt || {};\n      alt.text = alt.text || null;\n      alt.id = (alt.text) ? alt.id || 'qrcode-description' : null;\n\n      // Compose title property surrogate\n      title = (typeof title === 'string') ? {text: title} : title || {};\n      title.text = title.text || null;\n      title.id = (title.text) ? title.id || 'qrcode-title' : null;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var c, mc, r, mr, qrSvg='', rect;\n\n      rect = 'l' + cellSize + ',0 0,' + cellSize +\n        ' -' + cellSize + ',0 0,-' + cellSize + 'z ';\n\n      qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n      qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : '';\n      qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" ';\n      qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n      qrSvg += (title.text || alt.text) ? ' role=\"img\" aria-labelledby=\"' +\n          escapeXml([title.id, alt.id].join(' ').trim() ) + '\"' : '';\n      qrSvg += '>';\n      qrSvg += (title.text) ? '<title id=\"' + escapeXml(title.id) + '\">' +\n          escapeXml(title.text) + '</title>' : '';\n      qrSvg += (alt.text) ? '<description id=\"' + escapeXml(alt.id) + '\">' +\n          escapeXml(alt.text) + '</description>' : '';\n      qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n      qrSvg += '<path d=\"';\n\n      for (r = 0; r < _this.getModuleCount(); r += 1) {\n        mr = r * cellSize + margin;\n        for (c = 0; c < _this.getModuleCount(); c += 1) {\n          if (_this.isDark(r, c) ) {\n            mc = c*cellSize+margin;\n            qrSvg += 'M' + mc + ',' + mr + rect;\n          }\n        }\n      }\n\n      qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n      qrSvg += '</svg>';\n\n      return qrSvg;\n    };\n\n    _this.createDataURL = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      return createDataURL(size, size, function(x, y) {\n        if (min <= x && x < max && min <= y && y < max) {\n          var c = Math.floor( (x - min) / cellSize);\n          var r = Math.floor( (y - min) / cellSize);\n          return _this.isDark(r, c)? 0 : 1;\n        } else {\n          return 1;\n        }\n      } );\n    };\n\n    _this.createImgTag = function(cellSize, margin, alt) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n\n      var img = '';\n      img += '<img';\n      img += '\\u0020src=\"';\n      img += _this.createDataURL(cellSize, margin);\n      img += '\"';\n      img += '\\u0020width=\"';\n      img += size;\n      img += '\"';\n      img += '\\u0020height=\"';\n      img += size;\n      img += '\"';\n      if (alt) {\n        img += '\\u0020alt=\"';\n        img += escapeXml(alt);\n        img += '\"';\n      }\n      img += '/>';\n\n      return img;\n    };\n\n    var escapeXml = function(s) {\n      var escaped = '';\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charAt(i);\n        switch(c) {\n        case '<': escaped += '&lt;'; break;\n        case '>': escaped += '&gt;'; break;\n        case '&': escaped += '&amp;'; break;\n        case '\"': escaped += '&quot;'; break;\n        default : escaped += c; break;\n        }\n      }\n      return escaped;\n    };\n\n    var _createHalfASCII = function(margin) {\n      var cellSize = 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r1, r2, p;\n\n      var blocks = {\n        '██': '█',\n        '█ ': '▀',\n        ' █': '▄',\n        '  ': ' '\n      };\n\n      var blocksLastLineNoMargin = {\n        '██': '▀',\n        '█ ': '▀',\n        ' █': ' ',\n        '  ': ' '\n      };\n\n      var ascii = '';\n      for (y = 0; y < size; y += 2) {\n        r1 = Math.floor((y - min) / cellSize);\n        r2 = Math.floor((y + 1 - min) / cellSize);\n        for (x = 0; x < size; x += 1) {\n          p = '█';\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r1, Math.floor((x - min) / cellSize))) {\n            p = ' ';\n          }\n\n          if (min <= x && x < max && min <= y+1 && y+1 < max && _this.isDark(r2, Math.floor((x - min) / cellSize))) {\n            p += ' ';\n          }\n          else {\n            p += '█';\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          ascii += (margin < 1 && y+1 >= max) ? blocksLastLineNoMargin[p] : blocks[p];\n        }\n\n        ascii += '\\n';\n      }\n\n      if (size % 2 && margin > 0) {\n        return ascii.substring(0, ascii.length - size - 1) + Array(size+1).join('▀');\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.createASCII = function(cellSize, margin) {\n      cellSize = cellSize || 1;\n\n      if (cellSize < 2) {\n        return _createHalfASCII(margin);\n      }\n\n      cellSize -= 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r, p;\n\n      var white = Array(cellSize+1).join('██');\n      var black = Array(cellSize+1).join('  ');\n\n      var ascii = '';\n      var line = '';\n      for (y = 0; y < size; y += 1) {\n        r = Math.floor( (y - min) / cellSize);\n        line = '';\n        for (x = 0; x < size; x += 1) {\n          p = 1;\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r, Math.floor((x - min) / cellSize))) {\n            p = 0;\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          line += p ? white : black;\n        }\n\n        for (r = 0; r < cellSize; r += 1) {\n          ascii += line + '\\n';\n        }\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.renderTo2dContext = function(context, cellSize) {\n      cellSize = cellSize || 2;\n      var length = _this.getModuleCount();\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          context.fillStyle = _this.isDark(row, col) ? 'black' : 'white';\n          context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n        }\n      }\n    }\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrcode.stringToBytes\n  //---------------------------------------------------------------------\n\n  qrcode.stringToBytesFuncs = {\n    'default' : function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        bytes.push(c & 0xff);\n      }\n      return bytes;\n    }\n  };\n\n  qrcode.stringToBytes = qrcode.stringToBytesFuncs['default'];\n\n  //---------------------------------------------------------------------\n  // qrcode.createStringToBytes\n  //---------------------------------------------------------------------\n\n  /**\n   * @param unicodeData base64 string of byte array.\n   * [16bit Unicode],[16bit Bytes], ...\n   * @param numChars\n   */\n  qrcode.createStringToBytes = function(unicodeData, numChars) {\n\n    // create conversion map.\n\n    var unicodeMap = function() {\n\n      var bin = base64DecodeInputStream(unicodeData);\n      var read = function() {\n        var b = bin.read();\n        if (b == -1) throw 'eof';\n        return b;\n      };\n\n      var count = 0;\n      var unicodeMap = {};\n      while (true) {\n        var b0 = bin.read();\n        if (b0 == -1) break;\n        var b1 = read();\n        var b2 = read();\n        var b3 = read();\n        var k = String.fromCharCode( (b0 << 8) | b1);\n        var v = (b2 << 8) | b3;\n        unicodeMap[k] = v;\n        count += 1;\n      }\n      if (count != numChars) {\n        throw count + ' != ' + numChars;\n      }\n\n      return unicodeMap;\n    }();\n\n    var unknownChar = '?'.charCodeAt(0);\n\n    return function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        if (c < 128) {\n          bytes.push(c);\n        } else {\n          var b = unicodeMap[s.charAt(i)];\n          if (typeof b == 'number') {\n            if ( (b & 0xff) == b) {\n              // 1byte\n              bytes.push(b);\n            } else {\n              // 2bytes\n              bytes.push(b >>> 8);\n              bytes.push(b & 0xff);\n            }\n          } else {\n            bytes.push(unknownChar);\n          }\n        }\n      }\n      return bytes;\n    };\n  };\n\n  //---------------------------------------------------------------------\n  // QRMode\n  //---------------------------------------------------------------------\n\n  var QRMode = {\n    MODE_NUMBER :    1 << 0,\n    MODE_ALPHA_NUM : 1 << 1,\n    MODE_8BIT_BYTE : 1 << 2,\n    MODE_KANJI :     1 << 3\n  };\n\n  //---------------------------------------------------------------------\n  // QRErrorCorrectionLevel\n  //---------------------------------------------------------------------\n\n  var QRErrorCorrectionLevel = {\n    L : 1,\n    M : 0,\n    Q : 3,\n    H : 2\n  };\n\n  //---------------------------------------------------------------------\n  // QRMaskPattern\n  //---------------------------------------------------------------------\n\n  var QRMaskPattern = {\n    PATTERN000 : 0,\n    PATTERN001 : 1,\n    PATTERN010 : 2,\n    PATTERN011 : 3,\n    PATTERN100 : 4,\n    PATTERN101 : 5,\n    PATTERN110 : 6,\n    PATTERN111 : 7\n  };\n\n  //---------------------------------------------------------------------\n  // QRUtil\n  //---------------------------------------------------------------------\n\n  var QRUtil = function() {\n\n    var PATTERN_POSITION_TABLE = [\n      [],\n      [6, 18],\n      [6, 22],\n      [6, 26],\n      [6, 30],\n      [6, 34],\n      [6, 22, 38],\n      [6, 24, 42],\n      [6, 26, 46],\n      [6, 28, 50],\n      [6, 30, 54],\n      [6, 32, 58],\n      [6, 34, 62],\n      [6, 26, 46, 66],\n      [6, 26, 48, 70],\n      [6, 26, 50, 74],\n      [6, 30, 54, 78],\n      [6, 30, 56, 82],\n      [6, 30, 58, 86],\n      [6, 34, 62, 90],\n      [6, 28, 50, 72, 94],\n      [6, 26, 50, 74, 98],\n      [6, 30, 54, 78, 102],\n      [6, 28, 54, 80, 106],\n      [6, 32, 58, 84, 110],\n      [6, 30, 58, 86, 114],\n      [6, 34, 62, 90, 118],\n      [6, 26, 50, 74, 98, 122],\n      [6, 30, 54, 78, 102, 126],\n      [6, 26, 52, 78, 104, 130],\n      [6, 30, 56, 82, 108, 134],\n      [6, 34, 60, 86, 112, 138],\n      [6, 30, 58, 86, 114, 142],\n      [6, 34, 62, 90, 118, 146],\n      [6, 30, 54, 78, 102, 126, 150],\n      [6, 24, 50, 76, 102, 128, 154],\n      [6, 28, 54, 80, 106, 132, 158],\n      [6, 32, 58, 84, 110, 136, 162],\n      [6, 26, 54, 82, 110, 138, 166],\n      [6, 30, 58, 86, 114, 142, 170]\n    ];\n    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\n    var _this = {};\n\n    var getBCHDigit = function(data) {\n      var digit = 0;\n      while (data != 0) {\n        digit += 1;\n        data >>>= 1;\n      }\n      return digit;\n    };\n\n    _this.getBCHTypeInfo = function(data) {\n      var d = data << 10;\n      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n        d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15) ) );\n      }\n      return ( (data << 10) | d) ^ G15_MASK;\n    };\n\n    _this.getBCHTypeNumber = function(data) {\n      var d = data << 12;\n      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n        d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18) ) );\n      }\n      return (data << 12) | d;\n    };\n\n    _this.getPatternPosition = function(typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n\n    _this.getMaskFunction = function(maskPattern) {\n\n      switch (maskPattern) {\n\n      case QRMaskPattern.PATTERN000 :\n        return function(i, j) { return (i + j) % 2 == 0; };\n      case QRMaskPattern.PATTERN001 :\n        return function(i, j) { return i % 2 == 0; };\n      case QRMaskPattern.PATTERN010 :\n        return function(i, j) { return j % 3 == 0; };\n      case QRMaskPattern.PATTERN011 :\n        return function(i, j) { return (i + j) % 3 == 0; };\n      case QRMaskPattern.PATTERN100 :\n        return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0; };\n      case QRMaskPattern.PATTERN101 :\n        return function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0; };\n      case QRMaskPattern.PATTERN110 :\n        return function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0; };\n      case QRMaskPattern.PATTERN111 :\n        return function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0; };\n\n      default :\n        throw 'bad maskPattern:' + maskPattern;\n      }\n    };\n\n    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n      var a = qrPolynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i += 1) {\n        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0) );\n      }\n      return a;\n    };\n\n    _this.getLengthInBits = function(mode, type) {\n\n      if (1 <= type && type < 10) {\n\n        // 1 - 9\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 10;\n        case QRMode.MODE_ALPHA_NUM : return 9;\n        case QRMode.MODE_8BIT_BYTE : return 8;\n        case QRMode.MODE_KANJI     : return 8;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 27) {\n\n        // 10 - 26\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 12;\n        case QRMode.MODE_ALPHA_NUM : return 11;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 10;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 41) {\n\n        // 27 - 40\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 14;\n        case QRMode.MODE_ALPHA_NUM : return 13;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 12;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else {\n        throw 'type:' + type;\n      }\n    };\n\n    _this.getLostPoint = function(qrcode) {\n\n      var moduleCount = qrcode.getModuleCount();\n\n      var lostPoint = 0;\n\n      // LEVEL1\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount; col += 1) {\n\n          var sameCount = 0;\n          var dark = qrcode.isDark(row, col);\n\n          for (var r = -1; r <= 1; r += 1) {\n\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue;\n            }\n\n            for (var c = -1; c <= 1; c += 1) {\n\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue;\n              }\n\n              if (r == 0 && c == 0) {\n                continue;\n              }\n\n              if (dark == qrcode.isDark(row + r, col + c) ) {\n                sameCount += 1;\n              }\n            }\n          }\n\n          if (sameCount > 5) {\n            lostPoint += (3 + sameCount - 5);\n          }\n        }\n      };\n\n      // LEVEL2\n\n      for (var row = 0; row < moduleCount - 1; row += 1) {\n        for (var col = 0; col < moduleCount - 1; col += 1) {\n          var count = 0;\n          if (qrcode.isDark(row, col) ) count += 1;\n          if (qrcode.isDark(row + 1, col) ) count += 1;\n          if (qrcode.isDark(row, col + 1) ) count += 1;\n          if (qrcode.isDark(row + 1, col + 1) ) count += 1;\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n      }\n\n      // LEVEL3\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount - 6; col += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row, col + 1)\n              &&  qrcode.isDark(row, col + 2)\n              &&  qrcode.isDark(row, col + 3)\n              &&  qrcode.isDark(row, col + 4)\n              && !qrcode.isDark(row, col + 5)\n              &&  qrcode.isDark(row, col + 6) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount - 6; row += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row + 1, col)\n              &&  qrcode.isDark(row + 2, col)\n              &&  qrcode.isDark(row + 3, col)\n              &&  qrcode.isDark(row + 4, col)\n              && !qrcode.isDark(row + 5, col)\n              &&  qrcode.isDark(row + 6, col) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      // LEVEL4\n\n      var darkCount = 0;\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount; row += 1) {\n          if (qrcode.isDark(row, col) ) {\n            darkCount += 1;\n          }\n        }\n      }\n\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n\n      return lostPoint;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // QRMath\n  //---------------------------------------------------------------------\n\n  var QRMath = function() {\n\n    var EXP_TABLE = new Array(256);\n    var LOG_TABLE = new Array(256);\n\n    // initialize tables\n    for (var i = 0; i < 8; i += 1) {\n      EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i += 1) {\n      EXP_TABLE[i] = EXP_TABLE[i - 4]\n        ^ EXP_TABLE[i - 5]\n        ^ EXP_TABLE[i - 6]\n        ^ EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i += 1) {\n      LOG_TABLE[EXP_TABLE[i] ] = i;\n    }\n\n    var _this = {};\n\n    _this.glog = function(n) {\n\n      if (n < 1) {\n        throw 'glog(' + n + ')';\n      }\n\n      return LOG_TABLE[n];\n    };\n\n    _this.gexp = function(n) {\n\n      while (n < 0) {\n        n += 255;\n      }\n\n      while (n >= 256) {\n        n -= 255;\n      }\n\n      return EXP_TABLE[n];\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrPolynomial\n  //---------------------------------------------------------------------\n\n  function qrPolynomial(num, shift) {\n\n    if (typeof num.length == 'undefined') {\n      throw num.length + '/' + shift;\n    }\n\n    var _num = function() {\n      var offset = 0;\n      while (offset < num.length && num[offset] == 0) {\n        offset += 1;\n      }\n      var _num = new Array(num.length - offset + shift);\n      for (var i = 0; i < num.length - offset; i += 1) {\n        _num[i] = num[i + offset];\n      }\n      return _num;\n    }();\n\n    var _this = {};\n\n    _this.getAt = function(index) {\n      return _num[index];\n    };\n\n    _this.getLength = function() {\n      return _num.length;\n    };\n\n    _this.multiply = function(e) {\n\n      var num = new Array(_this.getLength() + e.getLength() - 1);\n\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        for (var j = 0; j < e.getLength(); j += 1) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i) ) + QRMath.glog(e.getAt(j) ) );\n        }\n      }\n\n      return qrPolynomial(num, 0);\n    };\n\n    _this.mod = function(e) {\n\n      if (_this.getLength() - e.getLength() < 0) {\n        return _this;\n      }\n\n      var ratio = QRMath.glog(_this.getAt(0) ) - QRMath.glog(e.getAt(0) );\n\n      var num = new Array(_this.getLength() );\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        num[i] = _this.getAt(i);\n      }\n\n      for (var i = 0; i < e.getLength(); i += 1) {\n        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i) ) + ratio);\n      }\n\n      // recursive call\n      return qrPolynomial(num, 0).mod(e);\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // QRRSBlock\n  //---------------------------------------------------------------------\n\n  var QRRSBlock = function() {\n\n    var RS_BLOCK_TABLE = [\n\n      // L\n      // M\n      // Q\n      // H\n\n      // 1\n      [1, 26, 19],\n      [1, 26, 16],\n      [1, 26, 13],\n      [1, 26, 9],\n\n      // 2\n      [1, 44, 34],\n      [1, 44, 28],\n      [1, 44, 22],\n      [1, 44, 16],\n\n      // 3\n      [1, 70, 55],\n      [1, 70, 44],\n      [2, 35, 17],\n      [2, 35, 13],\n\n      // 4\n      [1, 100, 80],\n      [2, 50, 32],\n      [2, 50, 24],\n      [4, 25, 9],\n\n      // 5\n      [1, 134, 108],\n      [2, 67, 43],\n      [2, 33, 15, 2, 34, 16],\n      [2, 33, 11, 2, 34, 12],\n\n      // 6\n      [2, 86, 68],\n      [4, 43, 27],\n      [4, 43, 19],\n      [4, 43, 15],\n\n      // 7\n      [2, 98, 78],\n      [4, 49, 31],\n      [2, 32, 14, 4, 33, 15],\n      [4, 39, 13, 1, 40, 14],\n\n      // 8\n      [2, 121, 97],\n      [2, 60, 38, 2, 61, 39],\n      [4, 40, 18, 2, 41, 19],\n      [4, 40, 14, 2, 41, 15],\n\n      // 9\n      [2, 146, 116],\n      [3, 58, 36, 2, 59, 37],\n      [4, 36, 16, 4, 37, 17],\n      [4, 36, 12, 4, 37, 13],\n\n      // 10\n      [2, 86, 68, 2, 87, 69],\n      [4, 69, 43, 1, 70, 44],\n      [6, 43, 19, 2, 44, 20],\n      [6, 43, 15, 2, 44, 16],\n\n      // 11\n      [4, 101, 81],\n      [1, 80, 50, 4, 81, 51],\n      [4, 50, 22, 4, 51, 23],\n      [3, 36, 12, 8, 37, 13],\n\n      // 12\n      [2, 116, 92, 2, 117, 93],\n      [6, 58, 36, 2, 59, 37],\n      [4, 46, 20, 6, 47, 21],\n      [7, 42, 14, 4, 43, 15],\n\n      // 13\n      [4, 133, 107],\n      [8, 59, 37, 1, 60, 38],\n      [8, 44, 20, 4, 45, 21],\n      [12, 33, 11, 4, 34, 12],\n\n      // 14\n      [3, 145, 115, 1, 146, 116],\n      [4, 64, 40, 5, 65, 41],\n      [11, 36, 16, 5, 37, 17],\n      [11, 36, 12, 5, 37, 13],\n\n      // 15\n      [5, 109, 87, 1, 110, 88],\n      [5, 65, 41, 5, 66, 42],\n      [5, 54, 24, 7, 55, 25],\n      [11, 36, 12, 7, 37, 13],\n\n      // 16\n      [5, 122, 98, 1, 123, 99],\n      [7, 73, 45, 3, 74, 46],\n      [15, 43, 19, 2, 44, 20],\n      [3, 45, 15, 13, 46, 16],\n\n      // 17\n      [1, 135, 107, 5, 136, 108],\n      [10, 74, 46, 1, 75, 47],\n      [1, 50, 22, 15, 51, 23],\n      [2, 42, 14, 17, 43, 15],\n\n      // 18\n      [5, 150, 120, 1, 151, 121],\n      [9, 69, 43, 4, 70, 44],\n      [17, 50, 22, 1, 51, 23],\n      [2, 42, 14, 19, 43, 15],\n\n      // 19\n      [3, 141, 113, 4, 142, 114],\n      [3, 70, 44, 11, 71, 45],\n      [17, 47, 21, 4, 48, 22],\n      [9, 39, 13, 16, 40, 14],\n\n      // 20\n      [3, 135, 107, 5, 136, 108],\n      [3, 67, 41, 13, 68, 42],\n      [15, 54, 24, 5, 55, 25],\n      [15, 43, 15, 10, 44, 16],\n\n      // 21\n      [4, 144, 116, 4, 145, 117],\n      [17, 68, 42],\n      [17, 50, 22, 6, 51, 23],\n      [19, 46, 16, 6, 47, 17],\n\n      // 22\n      [2, 139, 111, 7, 140, 112],\n      [17, 74, 46],\n      [7, 54, 24, 16, 55, 25],\n      [34, 37, 13],\n\n      // 23\n      [4, 151, 121, 5, 152, 122],\n      [4, 75, 47, 14, 76, 48],\n      [11, 54, 24, 14, 55, 25],\n      [16, 45, 15, 14, 46, 16],\n\n      // 24\n      [6, 147, 117, 4, 148, 118],\n      [6, 73, 45, 14, 74, 46],\n      [11, 54, 24, 16, 55, 25],\n      [30, 46, 16, 2, 47, 17],\n\n      // 25\n      [8, 132, 106, 4, 133, 107],\n      [8, 75, 47, 13, 76, 48],\n      [7, 54, 24, 22, 55, 25],\n      [22, 45, 15, 13, 46, 16],\n\n      // 26\n      [10, 142, 114, 2, 143, 115],\n      [19, 74, 46, 4, 75, 47],\n      [28, 50, 22, 6, 51, 23],\n      [33, 46, 16, 4, 47, 17],\n\n      // 27\n      [8, 152, 122, 4, 153, 123],\n      [22, 73, 45, 3, 74, 46],\n      [8, 53, 23, 26, 54, 24],\n      [12, 45, 15, 28, 46, 16],\n\n      // 28\n      [3, 147, 117, 10, 148, 118],\n      [3, 73, 45, 23, 74, 46],\n      [4, 54, 24, 31, 55, 25],\n      [11, 45, 15, 31, 46, 16],\n\n      // 29\n      [7, 146, 116, 7, 147, 117],\n      [21, 73, 45, 7, 74, 46],\n      [1, 53, 23, 37, 54, 24],\n      [19, 45, 15, 26, 46, 16],\n\n      // 30\n      [5, 145, 115, 10, 146, 116],\n      [19, 75, 47, 10, 76, 48],\n      [15, 54, 24, 25, 55, 25],\n      [23, 45, 15, 25, 46, 16],\n\n      // 31\n      [13, 145, 115, 3, 146, 116],\n      [2, 74, 46, 29, 75, 47],\n      [42, 54, 24, 1, 55, 25],\n      [23, 45, 15, 28, 46, 16],\n\n      // 32\n      [17, 145, 115],\n      [10, 74, 46, 23, 75, 47],\n      [10, 54, 24, 35, 55, 25],\n      [19, 45, 15, 35, 46, 16],\n\n      // 33\n      [17, 145, 115, 1, 146, 116],\n      [14, 74, 46, 21, 75, 47],\n      [29, 54, 24, 19, 55, 25],\n      [11, 45, 15, 46, 46, 16],\n\n      // 34\n      [13, 145, 115, 6, 146, 116],\n      [14, 74, 46, 23, 75, 47],\n      [44, 54, 24, 7, 55, 25],\n      [59, 46, 16, 1, 47, 17],\n\n      // 35\n      [12, 151, 121, 7, 152, 122],\n      [12, 75, 47, 26, 76, 48],\n      [39, 54, 24, 14, 55, 25],\n      [22, 45, 15, 41, 46, 16],\n\n      // 36\n      [6, 151, 121, 14, 152, 122],\n      [6, 75, 47, 34, 76, 48],\n      [46, 54, 24, 10, 55, 25],\n      [2, 45, 15, 64, 46, 16],\n\n      // 37\n      [17, 152, 122, 4, 153, 123],\n      [29, 74, 46, 14, 75, 47],\n      [49, 54, 24, 10, 55, 25],\n      [24, 45, 15, 46, 46, 16],\n\n      // 38\n      [4, 152, 122, 18, 153, 123],\n      [13, 74, 46, 32, 75, 47],\n      [48, 54, 24, 14, 55, 25],\n      [42, 45, 15, 32, 46, 16],\n\n      // 39\n      [20, 147, 117, 4, 148, 118],\n      [40, 75, 47, 7, 76, 48],\n      [43, 54, 24, 22, 55, 25],\n      [10, 45, 15, 67, 46, 16],\n\n      // 40\n      [19, 148, 118, 6, 149, 119],\n      [18, 75, 47, 31, 76, 48],\n      [34, 54, 24, 34, 55, 25],\n      [20, 45, 15, 61, 46, 16]\n    ];\n\n    var qrRSBlock = function(totalCount, dataCount) {\n      var _this = {};\n      _this.totalCount = totalCount;\n      _this.dataCount = dataCount;\n      return _this;\n    };\n\n    var _this = {};\n\n    var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n\n      switch(errorCorrectionLevel) {\n      case QRErrorCorrectionLevel.L :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n      case QRErrorCorrectionLevel.M :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectionLevel.Q :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectionLevel.H :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default :\n        return undefined;\n      }\n    };\n\n    _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n\n      var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n\n      if (typeof rsBlock == 'undefined') {\n        throw 'bad rs block @ typeNumber:' + typeNumber +\n            '/errorCorrectionLevel:' + errorCorrectionLevel;\n      }\n\n      var length = rsBlock.length / 3;\n\n      var list = [];\n\n      for (var i = 0; i < length; i += 1) {\n\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n\n        for (var j = 0; j < count; j += 1) {\n          list.push(qrRSBlock(totalCount, dataCount) );\n        }\n      }\n\n      return list;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrBitBuffer\n  //---------------------------------------------------------------------\n\n  var qrBitBuffer = function() {\n\n    var _buffer = [];\n    var _length = 0;\n\n    var _this = {};\n\n    _this.getBuffer = function() {\n      return _buffer;\n    };\n\n    _this.getAt = function(index) {\n      var bufIndex = Math.floor(index / 8);\n      return ( (_buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n    };\n\n    _this.put = function(num, length) {\n      for (var i = 0; i < length; i += 1) {\n        _this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n      }\n    };\n\n    _this.getLengthInBits = function() {\n      return _length;\n    };\n\n    _this.putBit = function(bit) {\n\n      var bufIndex = Math.floor(_length / 8);\n      if (_buffer.length <= bufIndex) {\n        _buffer.push(0);\n      }\n\n      if (bit) {\n        _buffer[bufIndex] |= (0x80 >>> (_length % 8) );\n      }\n\n      _length += 1;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrNumber\n  //---------------------------------------------------------------------\n\n  var qrNumber = function(data) {\n\n    var _mode = QRMode.MODE_NUMBER;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _data;\n\n      var i = 0;\n\n      while (i + 2 < data.length) {\n        buffer.put(strToNum(data.substring(i, i + 3) ), 10);\n        i += 3;\n      }\n\n      if (i < data.length) {\n        if (data.length - i == 1) {\n          buffer.put(strToNum(data.substring(i, i + 1) ), 4);\n        } else if (data.length - i == 2) {\n          buffer.put(strToNum(data.substring(i, i + 2) ), 7);\n        }\n      }\n    };\n\n    var strToNum = function(s) {\n      var num = 0;\n      for (var i = 0; i < s.length; i += 1) {\n        num = num * 10 + chatToNum(s.charAt(i) );\n      }\n      return num;\n    };\n\n    var chatToNum = function(c) {\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      }\n      throw 'illegal char :' + c;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrAlphaNum\n  //---------------------------------------------------------------------\n\n  var qrAlphaNum = function(data) {\n\n    var _mode = QRMode.MODE_ALPHA_NUM;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var s = _data;\n\n      var i = 0;\n\n      while (i + 1 < s.length) {\n        buffer.put(\n          getCode(s.charAt(i) ) * 45 +\n          getCode(s.charAt(i + 1) ), 11);\n        i += 2;\n      }\n\n      if (i < s.length) {\n        buffer.put(getCode(s.charAt(i) ), 6);\n      }\n    };\n\n    var getCode = function(c) {\n\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if ('A' <= c && c <= 'Z') {\n        return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n      } else {\n        switch (c) {\n        case ' ' : return 36;\n        case '$' : return 37;\n        case '%' : return 38;\n        case '*' : return 39;\n        case '+' : return 40;\n        case '-' : return 41;\n        case '.' : return 42;\n        case '/' : return 43;\n        case ':' : return 44;\n        default :\n          throw 'illegal char :' + c;\n        }\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qr8BitByte\n  //---------------------------------------------------------------------\n\n  var qr8BitByte = function(data) {\n\n    var _mode = QRMode.MODE_8BIT_BYTE;\n    var _data = data;\n    var _bytes = qrcode.stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _bytes.length;\n    };\n\n    _this.write = function(buffer) {\n      for (var i = 0; i < _bytes.length; i += 1) {\n        buffer.put(_bytes[i], 8);\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrKanji\n  //---------------------------------------------------------------------\n\n  var qrKanji = function(data) {\n\n    var _mode = QRMode.MODE_KANJI;\n    var _data = data;\n\n    var stringToBytes = qrcode.stringToBytesFuncs['SJIS'];\n    if (!stringToBytes) {\n      throw 'sjis not supported.';\n    }\n    !function(c, code) {\n      // self test for sjis support.\n      var test = stringToBytes(c);\n      if (test.length != 2 || ( (test[0] << 8) | test[1]) != code) {\n        throw 'sjis not supported.';\n      }\n    }('\\u53cb', 0x9746);\n\n    var _bytes = stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return ~~(_bytes.length / 2);\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _bytes;\n\n      var i = 0;\n\n      while (i + 1 < data.length) {\n\n        var c = ( (0xff & data[i]) << 8) | (0xff & data[i + 1]);\n\n        if (0x8140 <= c && c <= 0x9FFC) {\n          c -= 0x8140;\n        } else if (0xE040 <= c && c <= 0xEBBF) {\n          c -= 0xC140;\n        } else {\n          throw 'illegal char at ' + (i + 1) + '/' + c;\n        }\n\n        c = ( (c >>> 8) & 0xff) * 0xC0 + (c & 0xff);\n\n        buffer.put(c, 13);\n\n        i += 2;\n      }\n\n      if (i < data.length) {\n        throw 'illegal char at ' + (i + 1);\n      }\n    };\n\n    return _this;\n  };\n\n  //=====================================================================\n  // GIF Support etc.\n  //\n\n  //---------------------------------------------------------------------\n  // byteArrayOutputStream\n  //---------------------------------------------------------------------\n\n  var byteArrayOutputStream = function() {\n\n    var _bytes = [];\n\n    var _this = {};\n\n    _this.writeByte = function(b) {\n      _bytes.push(b & 0xff);\n    };\n\n    _this.writeShort = function(i) {\n      _this.writeByte(i);\n      _this.writeByte(i >>> 8);\n    };\n\n    _this.writeBytes = function(b, off, len) {\n      off = off || 0;\n      len = len || b.length;\n      for (var i = 0; i < len; i += 1) {\n        _this.writeByte(b[i + off]);\n      }\n    };\n\n    _this.writeString = function(s) {\n      for (var i = 0; i < s.length; i += 1) {\n        _this.writeByte(s.charCodeAt(i) );\n      }\n    };\n\n    _this.toByteArray = function() {\n      return _bytes;\n    };\n\n    _this.toString = function() {\n      var s = '';\n      s += '[';\n      for (var i = 0; i < _bytes.length; i += 1) {\n        if (i > 0) {\n          s += ',';\n        }\n        s += _bytes[i];\n      }\n      s += ']';\n      return s;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64EncodeOutputStream\n  //---------------------------------------------------------------------\n\n  var base64EncodeOutputStream = function() {\n\n    var _buffer = 0;\n    var _buflen = 0;\n    var _length = 0;\n    var _base64 = '';\n\n    var _this = {};\n\n    var writeEncoded = function(b) {\n      _base64 += String.fromCharCode(encode(b & 0x3f) );\n    };\n\n    var encode = function(n) {\n      if (n < 0) {\n        // error.\n      } else if (n < 26) {\n        return 0x41 + n;\n      } else if (n < 52) {\n        return 0x61 + (n - 26);\n      } else if (n < 62) {\n        return 0x30 + (n - 52);\n      } else if (n == 62) {\n        return 0x2b;\n      } else if (n == 63) {\n        return 0x2f;\n      }\n      throw 'n:' + n;\n    };\n\n    _this.writeByte = function(n) {\n\n      _buffer = (_buffer << 8) | (n & 0xff);\n      _buflen += 8;\n      _length += 1;\n\n      while (_buflen >= 6) {\n        writeEncoded(_buffer >>> (_buflen - 6) );\n        _buflen -= 6;\n      }\n    };\n\n    _this.flush = function() {\n\n      if (_buflen > 0) {\n        writeEncoded(_buffer << (6 - _buflen) );\n        _buffer = 0;\n        _buflen = 0;\n      }\n\n      if (_length % 3 != 0) {\n        // padding\n        var padlen = 3 - _length % 3;\n        for (var i = 0; i < padlen; i += 1) {\n          _base64 += '=';\n        }\n      }\n    };\n\n    _this.toString = function() {\n      return _base64;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64DecodeInputStream\n  //---------------------------------------------------------------------\n\n  var base64DecodeInputStream = function(str) {\n\n    var _str = str;\n    var _pos = 0;\n    var _buffer = 0;\n    var _buflen = 0;\n\n    var _this = {};\n\n    _this.read = function() {\n\n      while (_buflen < 8) {\n\n        if (_pos >= _str.length) {\n          if (_buflen == 0) {\n            return -1;\n          }\n          throw 'unexpected end of file./' + _buflen;\n        }\n\n        var c = _str.charAt(_pos);\n        _pos += 1;\n\n        if (c == '=') {\n          _buflen = 0;\n          return -1;\n        } else if (c.match(/^\\s$/) ) {\n          // ignore if whitespace.\n          continue;\n        }\n\n        _buffer = (_buffer << 6) | decode(c.charCodeAt(0) );\n        _buflen += 6;\n      }\n\n      var n = (_buffer >>> (_buflen - 8) ) & 0xff;\n      _buflen -= 8;\n      return n;\n    };\n\n    var decode = function(c) {\n      if (0x41 <= c && c <= 0x5a) {\n        return c - 0x41;\n      } else if (0x61 <= c && c <= 0x7a) {\n        return c - 0x61 + 26;\n      } else if (0x30 <= c && c <= 0x39) {\n        return c - 0x30 + 52;\n      } else if (c == 0x2b) {\n        return 62;\n      } else if (c == 0x2f) {\n        return 63;\n      } else {\n        throw 'c:' + c;\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // gifImage (B/W)\n  //---------------------------------------------------------------------\n\n  var gifImage = function(width, height) {\n\n    var _width = width;\n    var _height = height;\n    var _data = new Array(width * height);\n\n    var _this = {};\n\n    _this.setPixel = function(x, y, pixel) {\n      _data[y * _width + x] = pixel;\n    };\n\n    _this.write = function(out) {\n\n      //---------------------------------\n      // GIF Signature\n\n      out.writeString('GIF87a');\n\n      //---------------------------------\n      // Screen Descriptor\n\n      out.writeShort(_width);\n      out.writeShort(_height);\n\n      out.writeByte(0x80); // 2bit\n      out.writeByte(0);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Global Color Map\n\n      // black\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n\n      // white\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n\n      //---------------------------------\n      // Image Descriptor\n\n      out.writeString(',');\n      out.writeShort(0);\n      out.writeShort(0);\n      out.writeShort(_width);\n      out.writeShort(_height);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Local Color Map\n\n      //---------------------------------\n      // Raster Data\n\n      var lzwMinCodeSize = 2;\n      var raster = getLZWRaster(lzwMinCodeSize);\n\n      out.writeByte(lzwMinCodeSize);\n\n      var offset = 0;\n\n      while (raster.length - offset > 255) {\n        out.writeByte(255);\n        out.writeBytes(raster, offset, 255);\n        offset += 255;\n      }\n\n      out.writeByte(raster.length - offset);\n      out.writeBytes(raster, offset, raster.length - offset);\n      out.writeByte(0x00);\n\n      //---------------------------------\n      // GIF Terminator\n      out.writeString(';');\n    };\n\n    var bitOutputStream = function(out) {\n\n      var _out = out;\n      var _bitLength = 0;\n      var _bitBuffer = 0;\n\n      var _this = {};\n\n      _this.write = function(data, length) {\n\n        if ( (data >>> length) != 0) {\n          throw 'length over';\n        }\n\n        while (_bitLength + length >= 8) {\n          _out.writeByte(0xff & ( (data << _bitLength) | _bitBuffer) );\n          length -= (8 - _bitLength);\n          data >>>= (8 - _bitLength);\n          _bitBuffer = 0;\n          _bitLength = 0;\n        }\n\n        _bitBuffer = (data << _bitLength) | _bitBuffer;\n        _bitLength = _bitLength + length;\n      };\n\n      _this.flush = function() {\n        if (_bitLength > 0) {\n          _out.writeByte(_bitBuffer);\n        }\n      };\n\n      return _this;\n    };\n\n    var getLZWRaster = function(lzwMinCodeSize) {\n\n      var clearCode = 1 << lzwMinCodeSize;\n      var endCode = (1 << lzwMinCodeSize) + 1;\n      var bitLength = lzwMinCodeSize + 1;\n\n      // Setup LZWTable\n      var table = lzwTable();\n\n      for (var i = 0; i < clearCode; i += 1) {\n        table.add(String.fromCharCode(i) );\n      }\n      table.add(String.fromCharCode(clearCode) );\n      table.add(String.fromCharCode(endCode) );\n\n      var byteOut = byteArrayOutputStream();\n      var bitOut = bitOutputStream(byteOut);\n\n      // clear code\n      bitOut.write(clearCode, bitLength);\n\n      var dataIndex = 0;\n\n      var s = String.fromCharCode(_data[dataIndex]);\n      dataIndex += 1;\n\n      while (dataIndex < _data.length) {\n\n        var c = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n\n        if (table.contains(s + c) ) {\n\n          s = s + c;\n\n        } else {\n\n          bitOut.write(table.indexOf(s), bitLength);\n\n          if (table.size() < 0xfff) {\n\n            if (table.size() == (1 << bitLength) ) {\n              bitLength += 1;\n            }\n\n            table.add(s + c);\n          }\n\n          s = c;\n        }\n      }\n\n      bitOut.write(table.indexOf(s), bitLength);\n\n      // end code\n      bitOut.write(endCode, bitLength);\n\n      bitOut.flush();\n\n      return byteOut.toByteArray();\n    };\n\n    var lzwTable = function() {\n\n      var _map = {};\n      var _size = 0;\n\n      var _this = {};\n\n      _this.add = function(key) {\n        if (_this.contains(key) ) {\n          throw 'dup key:' + key;\n        }\n        _map[key] = _size;\n        _size += 1;\n      };\n\n      _this.size = function() {\n        return _size;\n      };\n\n      _this.indexOf = function(key) {\n        return _map[key];\n      };\n\n      _this.contains = function(key) {\n        return typeof _map[key] != 'undefined';\n      };\n\n      return _this;\n    };\n\n    return _this;\n  };\n\n  var createDataURL = function(width, height, getPixel) {\n    var gif = gifImage(width, height);\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < width; x += 1) {\n        gif.setPixel(x, y, getPixel(x, y) );\n      }\n    }\n\n    var b = byteArrayOutputStream();\n    gif.write(b);\n\n    var base64 = base64EncodeOutputStream();\n    var bytes = b.toByteArray();\n    for (var i = 0; i < bytes.length; i += 1) {\n      base64.writeByte(bytes[i]);\n    }\n    base64.flush();\n\n    return 'data:image/gif;base64,' + base64;\n  };\n\n  //---------------------------------------------------------------------\n  // returns qrcode function.\n\n  return qrcode;\n}();\n\n// multibyte support\n!function() {\n\n  qrcode.stringToBytesFuncs['UTF-8'] = function(s) {\n    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n    function toUTF8Array(str) {\n      var utf8 = [];\n      for (var i=0; i < str.length; i++) {\n        var charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);\n        else if (charcode < 0x800) {\n          utf8.push(0xc0 | (charcode >> 6),\n              0x80 | (charcode & 0x3f));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n          utf8.push(0xe0 | (charcode >> 12),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n        // surrogate pair\n        else {\n          i++;\n          // UTF-16 encodes 0x10000-0x10FFFF by\n          // subtracting 0x10000 and splitting the\n          // 20 bits of 0x0-0xFFFFF into two halves\n          charcode = 0x10000 + (((charcode & 0x3ff)<<10)\n            | (str.charCodeAt(i) & 0x3ff));\n          utf8.push(0xf0 | (charcode >>18),\n              0x80 | ((charcode>>12) & 0x3f),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n      }\n      return utf8;\n    }\n    return toUTF8Array(s);\n  };\n\n}();\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n      define([], factory);\n  } else if (typeof exports === 'object') {\n      module.exports = factory();\n  }\n}(function () {\n    return qrcode;\n}));\n","import { UnknownObject } from \"../types\";\n\nconst isObject = (obj: Record<string, unknown>): boolean => !!obj && typeof obj === \"object\" && !Array.isArray(obj);\n\nexport default function mergeDeep(target: UnknownObject, ...sources: UnknownObject[]): UnknownObject {\n  if (!sources.length) return target;\n  const source = sources.shift();\n  if (source === undefined || !isObject(target) || !isObject(source)) return target;\n  target = { ...target };\n  Object.keys(source).forEach((key: string): void => {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n      target[key] = sourceValue;\n    } else if (isObject(targetValue) && isObject(sourceValue)) {\n      target[key] = mergeDeep(Object.assign({}, targetValue), sourceValue);\n    } else {\n      target[key] = sourceValue;\n    }\n  });\n\n  return mergeDeep(target, ...sources);\n}\n","interface ErrorCorrectionPercents {\n  [key: string]: number;\n}\n\nexport default {\n  L: 0.07,\n  M: 0.15,\n  Q: 0.25,\n  H: 0.3\n} as ErrorCorrectionPercents;\n","import dotTypes from \"../constants/dotTypes\";\nimport { DotType } from \"../types\";\nimport { CanvasRenderingContext2D } from \"canvas\";\n\ntype GetNeighbor = (x: number, y: number) => boolean;\ntype DrawArgs = {\n  x: number;\n  y: number;\n  size: number;\n  context: CanvasRenderingContext2D;\n  getNeighbor: GetNeighbor;\n};\n\ntype BasicFigureDrawArgs = {\n  x: number;\n  y: number;\n  size: number;\n  context: CanvasRenderingContext2D;\n  rotation: number;\n};\n\ntype RotateFigureArgs = {\n  x: number;\n  y: number;\n  size: number;\n  context: CanvasRenderingContext2D;\n  rotation: number;\n  draw: () => void;\n};\n\nexport default class QRDot {\n  _context: CanvasRenderingContext2D;\n  _type: DotType;\n\n  constructor({ context, type }: { context: CanvasRenderingContext2D; type: DotType }) {\n    this._context = context;\n    this._type = type;\n  }\n\n  draw(x: number, y: number, size: number, getNeighbor: GetNeighbor): void {\n    const context = this._context;\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case dotTypes.dots:\n        drawFunction = this._drawDot;\n        break;\n      case dotTypes.classy:\n        drawFunction = this._drawClassy;\n        break;\n      case dotTypes.classyRounded:\n        drawFunction = this._drawClassyRounded;\n        break;\n      case dotTypes.rounded:\n        drawFunction = this._drawRounded;\n        break;\n      case dotTypes.extraRounded:\n        drawFunction = this._drawExtraRounded;\n        break;\n      case dotTypes.square:\n      default:\n        drawFunction = this._drawSquare;\n    }\n\n    drawFunction.call(this, { x, y, size, context, getNeighbor });\n  }\n\n  _rotateFigure({ x, y, size, context, rotation, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    context.translate(cx, cy);\n    rotation && context.rotate(rotation);\n    draw();\n    context.closePath();\n    rotation && context.rotate(-rotation);\n    context.translate(-cx, -cy);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, context } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        context.arc(0, 0, size / 2, 0, Math.PI * 2);\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, context } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        context.rect(-size / 2, -size / 2, size, size);\n      }\n    });\n  }\n\n  //if rotation === 0 - right side is rounded\n  _basicSideRounded(args: BasicFigureDrawArgs): void {\n    const { size, context } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        context.arc(0, 0, size / 2, -Math.PI / 2, Math.PI / 2);\n        context.lineTo(-size / 2, size / 2);\n        context.lineTo(-size / 2, -size / 2);\n        context.lineTo(0, -size / 2);\n      }\n    });\n  }\n\n  //if rotation === 0 - top right corner is rounded\n  _basicCornerRounded(args: BasicFigureDrawArgs): void {\n    const { size, context } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        context.arc(0, 0, size / 2, -Math.PI / 2, 0);\n        context.lineTo(size / 2, size / 2);\n        context.lineTo(-size / 2, size / 2);\n        context.lineTo(-size / 2, -size / 2);\n        context.lineTo(0, -size / 2);\n      }\n    });\n  }\n\n  //if rotation === 0 - top right corner is rounded\n  _basicCornerExtraRounded(args: BasicFigureDrawArgs): void {\n    const { size, context } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        context.arc(-size / 2, size / 2, size, -Math.PI / 2, 0);\n        context.lineTo(-size / 2, size / 2);\n        context.lineTo(-size / 2, -size / 2);\n      }\n    });\n  }\n\n  _basicCornersRounded(args: BasicFigureDrawArgs): void {\n    const { size, context } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        context.arc(0, 0, size / 2, -Math.PI / 2, 0);\n        context.lineTo(size / 2, size / 2);\n        context.lineTo(0, size / 2);\n        context.arc(0, 0, size / 2, Math.PI / 2, Math.PI);\n        context.lineTo(-size / 2, -size / 2);\n        context.lineTo(0, -size / 2);\n      }\n    });\n  }\n\n  _basicCornersExtraRounded(args: BasicFigureDrawArgs): void {\n    const { size, context } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        context.arc(-size / 2, size / 2, size, -Math.PI / 2, 0);\n        context.arc(size / 2, -size / 2, size, Math.PI / 2, Math.PI);\n      }\n    });\n  }\n\n  _drawDot({ x, y, size, context }: DrawArgs): void {\n    this._basicDot({ x, y, size, context, rotation: 0 });\n  }\n\n  _drawSquare({ x, y, size, context }: DrawArgs): void {\n    this._basicSquare({ x, y, size, context, rotation: 0 });\n  }\n\n  _drawRounded({ x, y, size, context, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = +getNeighbor(-1, 0);\n    const rightNeighbor = +getNeighbor(1, 0);\n    const topNeighbor = +getNeighbor(0, -1);\n    const bottomNeighbor = +getNeighbor(0, 1);\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicDot({ x, y, size, context, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount > 2 || (leftNeighbor && rightNeighbor) || (topNeighbor && bottomNeighbor)) {\n      this._basicSquare({ x, y, size, context, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount === 2) {\n      let rotation = 0;\n\n      if (leftNeighbor && topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (topNeighbor && rightNeighbor) {\n        rotation = Math.PI;\n      } else if (rightNeighbor && bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicCornerRounded({ x, y, size, context, rotation });\n      return;\n    }\n\n    if (neighborsCount === 1) {\n      let rotation = 0;\n\n      if (topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (rightNeighbor) {\n        rotation = Math.PI;\n      } else if (bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicSideRounded({ x, y, size, context, rotation });\n      return;\n    }\n  }\n\n  _drawExtraRounded({ x, y, size, context, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = +getNeighbor(-1, 0);\n    const rightNeighbor = +getNeighbor(1, 0);\n    const topNeighbor = +getNeighbor(0, -1);\n    const bottomNeighbor = +getNeighbor(0, 1);\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicDot({ x, y, size, context, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount > 2 || (leftNeighbor && rightNeighbor) || (topNeighbor && bottomNeighbor)) {\n      this._basicSquare({ x, y, size, context, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount === 2) {\n      let rotation = 0;\n\n      if (leftNeighbor && topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (topNeighbor && rightNeighbor) {\n        rotation = Math.PI;\n      } else if (rightNeighbor && bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicCornerExtraRounded({ x, y, size, context, rotation });\n      return;\n    }\n\n    if (neighborsCount === 1) {\n      let rotation = 0;\n\n      if (topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (rightNeighbor) {\n        rotation = Math.PI;\n      } else if (bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicSideRounded({ x, y, size, context, rotation });\n      return;\n    }\n  }\n\n  _drawClassy({ x, y, size, context, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = +getNeighbor(-1, 0);\n    const rightNeighbor = +getNeighbor(1, 0);\n    const topNeighbor = +getNeighbor(0, -1);\n    const bottomNeighbor = +getNeighbor(0, 1);\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicCornersRounded({ x, y, size, context, rotation: Math.PI / 2 });\n      return;\n    }\n\n    if (!leftNeighbor && !topNeighbor) {\n      this._basicCornerRounded({ x, y, size, context, rotation: -Math.PI / 2 });\n      return;\n    }\n\n    if (!rightNeighbor && !bottomNeighbor) {\n      this._basicCornerRounded({ x, y, size, context, rotation: Math.PI / 2 });\n      return;\n    }\n\n    this._basicSquare({ x, y, size, context, rotation: 0 });\n  }\n\n  _drawClassyRounded({ x, y, size, context, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = +getNeighbor(-1, 0);\n    const rightNeighbor = +getNeighbor(1, 0);\n    const topNeighbor = +getNeighbor(0, -1);\n    const bottomNeighbor = +getNeighbor(0, 1);\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicCornersRounded({ x, y, size, context, rotation: Math.PI / 2 });\n      return;\n    }\n\n    if (!leftNeighbor && !topNeighbor) {\n      this._basicCornerExtraRounded({\n        x,\n        y,\n        size,\n        context,\n        rotation: -Math.PI / 2\n      });\n      return;\n    }\n\n    if (!rightNeighbor && !bottomNeighbor) {\n      this._basicCornerExtraRounded({\n        x,\n        y,\n        size,\n        context,\n        rotation: Math.PI / 2\n      });\n      return;\n    }\n\n    this._basicSquare({ x, y, size, context, rotation: 0 });\n  }\n}\n","import { DotTypes } from \"../types\";\n\nexport default {\n  dots: \"dots\",\n  rounded: \"rounded\",\n  classy: \"classy\",\n  classyRounded: \"classy-rounded\",\n  square: \"square\",\n  extraRounded: \"extra-rounded\"\n} as DotTypes;\n","import cornerSquareTypes from \"../constants/cornerSquareTypes\";\nimport { CornerSquareType } from \"../types\";\nimport { CanvasRenderingContext2D } from \"canvas\";\n\ntype DrawArgs = {\n  x: number;\n  y: number;\n  size: number;\n  context: CanvasRenderingContext2D;\n  rotation: number;\n};\n\ntype BasicFigureDrawArgs = {\n  x: number;\n  y: number;\n  size: number;\n  context: CanvasRenderingContext2D;\n  rotation: number;\n};\n\ntype RotateFigureArgs = {\n  x: number;\n  y: number;\n  size: number;\n  context: CanvasRenderingContext2D;\n  rotation: number;\n  draw: () => void;\n};\n\nexport default class QRCornerSquare {\n  _context: CanvasRenderingContext2D;\n  _type: CornerSquareType;\n\n  constructor({ context, type }: { context: CanvasRenderingContext2D; type: CornerSquareType }) {\n    this._context = context;\n    this._type = type;\n  }\n\n  draw(x: number, y: number, size: number, rotation: number): void {\n    const context = this._context;\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case cornerSquareTypes.square:\n        drawFunction = this._drawSquare;\n        break;\n      case cornerSquareTypes.extraRounded:\n        drawFunction = this._drawExtraRounded;\n        break;\n      case cornerSquareTypes.dot:\n      default:\n        drawFunction = this._drawDot;\n    }\n\n    drawFunction.call(this, { x, y, size, context, rotation });\n  }\n\n  _rotateFigure({ x, y, size, context, rotation, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    context.translate(cx, cy);\n    rotation && context.rotate(rotation);\n    draw();\n    context.closePath();\n    rotation && context.rotate(-rotation);\n    context.translate(-cx, -cy);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, context } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        context.arc(0, 0, size / 2, 0, Math.PI * 2);\n        context.arc(0, 0, size / 2 - dotSize, 0, Math.PI * 2);\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, context } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        context.rect(-size / 2, -size / 2, size, size);\n        context.rect(-size / 2 + dotSize, -size / 2 + dotSize, size - 2 * dotSize, size - 2 * dotSize);\n      }\n    });\n  }\n\n  _basicExtraRounded(args: BasicFigureDrawArgs): void {\n    const { size, context } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        context.arc(-dotSize, -dotSize, 2.5 * dotSize, Math.PI, -Math.PI / 2);\n        context.lineTo(dotSize, -3.5 * dotSize);\n        context.arc(dotSize, -dotSize, 2.5 * dotSize, -Math.PI / 2, 0);\n        context.lineTo(3.5 * dotSize, -dotSize);\n        context.arc(dotSize, dotSize, 2.5 * dotSize, 0, Math.PI / 2);\n        context.lineTo(-dotSize, 3.5 * dotSize);\n        context.arc(-dotSize, dotSize, 2.5 * dotSize, Math.PI / 2, Math.PI);\n        context.lineTo(-3.5 * dotSize, -dotSize);\n\n        context.arc(-dotSize, -dotSize, 1.5 * dotSize, Math.PI, -Math.PI / 2);\n        context.lineTo(dotSize, -2.5 * dotSize);\n        context.arc(dotSize, -dotSize, 1.5 * dotSize, -Math.PI / 2, 0);\n        context.lineTo(2.5 * dotSize, -dotSize);\n        context.arc(dotSize, dotSize, 1.5 * dotSize, 0, Math.PI / 2);\n        context.lineTo(-dotSize, 2.5 * dotSize);\n        context.arc(-dotSize, dotSize, 1.5 * dotSize, Math.PI / 2, Math.PI);\n        context.lineTo(-2.5 * dotSize, -dotSize);\n      }\n    });\n  }\n\n  _drawDot({ x, y, size, context, rotation }: DrawArgs): void {\n    this._basicDot({ x, y, size, context, rotation });\n  }\n\n  _drawSquare({ x, y, size, context, rotation }: DrawArgs): void {\n    this._basicSquare({ x, y, size, context, rotation });\n  }\n\n  _drawExtraRounded({ x, y, size, context, rotation }: DrawArgs): void {\n    this._basicExtraRounded({ x, y, size, context, rotation });\n  }\n}\n","import { CornerSquareTypes } from \"../types\";\n\nexport default {\n  dot: \"dot\",\n  square: \"square\",\n  extraRounded: \"extra-rounded\"\n} as CornerSquareTypes;\n","import cornerDotTypes from \"../constants/cornerDotTypes\";\nimport { CornerDotType } from \"../types\";\nimport { CanvasRenderingContext2D } from \"canvas\";\n\ntype DrawArgs = {\n  x: number;\n  y: number;\n  size: number;\n  context: CanvasRenderingContext2D;\n  rotation: number;\n};\n\ntype BasicFigureDrawArgs = {\n  x: number;\n  y: number;\n  size: number;\n  context: CanvasRenderingContext2D;\n  rotation: number;\n};\n\ntype RotateFigureArgs = {\n  x: number;\n  y: number;\n  size: number;\n  context: CanvasRenderingContext2D;\n  rotation: number;\n  draw: () => void;\n};\n\nexport default class QRCornerDot {\n  _context: CanvasRenderingContext2D;\n  _type: CornerDotType;\n\n  constructor({ context, type }: { context: CanvasRenderingContext2D; type: CornerDotType }) {\n    this._context = context;\n    this._type = type;\n  }\n\n  draw(x: number, y: number, size: number, rotation: number): void {\n    const context = this._context;\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case cornerDotTypes.square:\n        drawFunction = this._drawSquare;\n        break;\n      case cornerDotTypes.dot:\n      default:\n        drawFunction = this._drawDot;\n    }\n\n    drawFunction.call(this, { x, y, size, context, rotation });\n  }\n\n  _rotateFigure({ x, y, size, context, rotation, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    context.translate(cx, cy);\n    rotation && context.rotate(rotation);\n    draw();\n    context.closePath();\n    rotation && context.rotate(-rotation);\n    context.translate(-cx, -cy);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, context } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        context.arc(0, 0, size / 2, 0, Math.PI * 2);\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, context } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        context.rect(-size / 2, -size / 2, size, size);\n      }\n    });\n  }\n\n  _drawDot({ x, y, size, context, rotation }: DrawArgs): void {\n    this._basicDot({ x, y, size, context, rotation });\n  }\n\n  _drawSquare({ x, y, size, context, rotation }: DrawArgs): void {\n    this._basicSquare({ x, y, size, context, rotation });\n  }\n}\n","import { CornerDotTypes } from \"../types\";\n\nexport default {\n  dot: \"dot\",\n  square: \"square\"\n} as CornerDotTypes;\n","import calculateImageSize from \"../tools/calculateImageSize\";\nimport errorCorrectionPercents from \"../constants/errorCorrectionPercents\";\nimport QRDot from \"./QRDot\";\nimport QRCornerSquare from \"./QRCornerSquare\";\nimport QRCornerDot from \"./QRCornerDot\";\nimport { RequiredOptions, Gradient } from \"./QROptions\";\nimport gradientTypes from \"../constants/gradientTypes\";\nimport { QRCode } from \"../types\";\n\nimport { Canvas, createCanvas, Image, loadImage, CanvasRenderingContext2D } from \"canvas\";\n\ntype FilterFunction = (i: number, j: number) => boolean;\n\nconst squareMask = [\n  [1, 1, 1, 1, 1, 1, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 1, 1, 1, 1, 1, 1]\n];\n\nconst dotMask = [\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0]\n];\n\nexport default class QRCanvas {\n  _canvas: Canvas;\n  _options: RequiredOptions;\n  _qr?: QRCode;\n  _image?: Image;\n\n  //TODO don't pass all options to this class\n  constructor(options: RequiredOptions) {\n    this._canvas = createCanvas(options.width, options.height);\n    this._options = options;\n  }\n\n  get context(): CanvasRenderingContext2D | null {\n    return this._canvas.getContext(\"2d\");\n  }\n\n  get width(): number {\n    return this._canvas.width;\n  }\n\n  get height(): number {\n    return this._canvas.height;\n  }\n\n  getCanvas(): Canvas {\n    return this._canvas;\n  }\n\n  clear(): void {\n    const canvasContext = this.context;\n\n    if (canvasContext) {\n      canvasContext.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  async drawQR(qr: QRCode): Promise<void> {\n    const count = qr.getModuleCount();\n    const minSize = Math.min(this._options.width, this._options.height) - this._options.margin * 2;\n    const dotSize = Math.floor(minSize / count);\n    let drawImageSize = {\n      hideXDots: 0,\n      hideYDots: 0,\n      width: 0,\n      height: 0\n    };\n\n    this._qr = qr;\n\n    if (this._options.image) {\n      await this.loadImage();\n      if (!this._image) return;\n      const { imageOptions, qrOptions } = this._options;\n      const coverLevel = imageOptions.imageSize * errorCorrectionPercents[qrOptions.errorCorrectionLevel];\n      const maxHiddenDots = Math.floor(coverLevel * count * count);\n\n      drawImageSize = calculateImageSize({\n        originalWidth: this._image.width,\n        originalHeight: this._image.height,\n        maxHiddenDots,\n        maxHiddenAxisDots: count - 14,\n        dotSize\n      });\n    }\n\n    this.clear();\n    this.drawBackground();\n    this.drawDots((i: number, j: number): boolean => {\n      if (this._options.imageOptions.hideBackgroundDots) {\n        if (\n          i >= (count - drawImageSize.hideXDots) / 2 &&\n          i < (count + drawImageSize.hideXDots) / 2 &&\n          j >= (count - drawImageSize.hideYDots) / 2 &&\n          j < (count + drawImageSize.hideYDots) / 2\n        ) {\n          return false;\n        }\n      }\n\n      if (squareMask[i]?.[j] || squareMask[i - count + 7]?.[j] || squareMask[i]?.[j - count + 7]) {\n        return false;\n      }\n\n      if (dotMask[i]?.[j] || dotMask[i - count + 7]?.[j] || dotMask[i]?.[j - count + 7]) {\n        return false;\n      }\n\n      return true;\n    });\n    this.drawCorners();\n\n    if (this._options.image) {\n      this.drawImage({\n        width: drawImageSize.width,\n        height: drawImageSize.height,\n        count,\n        dotSize\n      });\n    }\n  }\n\n  drawBackground(): void {\n    const canvasContext = this.context;\n    const options = this._options;\n\n    if (canvasContext) {\n      if (options.backgroundOptions.gradient) {\n        const gradientOptions = options.backgroundOptions.gradient;\n        const gradient = this._createGradient({\n          context: canvasContext,\n          options: gradientOptions,\n          additionalRotation: 0,\n          x: 0,\n          y: 0,\n          size: this._canvas.width > this._canvas.height ? this._canvas.width : this._canvas.height\n        });\n\n        gradientOptions.colorStops.forEach(({ offset, color }: { offset: number; color: string }) => {\n          gradient.addColorStop(offset, color);\n        });\n\n        canvasContext.fillStyle = gradient;\n      } else if (options.backgroundOptions.color) {\n        canvasContext.fillStyle = options.backgroundOptions.color;\n      }\n      canvasContext.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  drawDots(filter?: FilterFunction): void {\n    if (!this._qr) {\n      throw \"QR code is not defined\";\n    }\n\n    const canvasContext = this.context;\n\n    if (!canvasContext) {\n      throw \"QR code is not defined\";\n    }\n\n    const options = this._options;\n    const count = this._qr.getModuleCount();\n\n    if (count > options.width || count > options.height) {\n      throw \"The canvas is too small.\";\n    }\n\n    const minSize = Math.min(options.width, options.height) - options.margin * 2;\n    const dotSize = Math.floor(minSize / count);\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\n    const dot = new QRDot({\n      context: canvasContext,\n      type: options.dotsOptions.type\n    });\n\n    canvasContext.beginPath();\n\n    for (let i = 0; i < count; i++) {\n      for (let j = 0; j < count; j++) {\n        if (filter && !filter(i, j)) {\n          continue;\n        }\n        if (!this._qr.isDark(i, j)) {\n          continue;\n        }\n        dot.draw(\n          xBeginning + i * dotSize,\n          yBeginning + j * dotSize,\n          dotSize,\n          (xOffset: number, yOffset: number): boolean => {\n            if (i + xOffset < 0 || j + yOffset < 0 || i + xOffset >= count || j + yOffset >= count) return false;\n            if (filter && !filter(i + xOffset, j + yOffset)) return false;\n            return !!this._qr && this._qr.isDark(i + xOffset, j + yOffset);\n          }\n        );\n      }\n    }\n\n    if (options.dotsOptions.gradient) {\n      const gradientOptions = options.dotsOptions.gradient;\n      const gradient = this._createGradient({\n        context: canvasContext,\n        options: gradientOptions,\n        additionalRotation: 0,\n        x: xBeginning,\n        y: yBeginning,\n        size: count * dotSize\n      });\n\n      gradientOptions.colorStops.forEach(({ offset, color }: { offset: number; color: string }) => {\n        gradient.addColorStop(offset, color);\n      });\n\n      canvasContext.fillStyle = canvasContext.strokeStyle = gradient;\n    } else if (options.dotsOptions.color) {\n      canvasContext.fillStyle = canvasContext.strokeStyle = options.dotsOptions.color;\n    }\n\n    canvasContext.fill(\"evenodd\");\n  }\n\n  drawCorners(filter?: FilterFunction): void {\n    if (!this._qr) {\n      throw \"QR code is not defined\";\n    }\n\n    const canvasContext = this.context;\n\n    if (!canvasContext) {\n      throw \"QR code is not defined\";\n    }\n\n    const options = this._options;\n\n    const count = this._qr.getModuleCount();\n    const minSize = Math.min(options.width, options.height) - options.margin * 2;\n    const dotSize = Math.floor(minSize / count);\n    const cornersSquareSize = dotSize * 7;\n    const cornersDotSize = dotSize * 3;\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\n\n    [\n      [0, 0, 0],\n      [1, 0, Math.PI / 2],\n      [0, 1, -Math.PI / 2]\n    ].forEach(([column, row, rotation]) => {\n      if (filter && !filter(column, row)) {\n        return;\n      }\n\n      const x = xBeginning + column * dotSize * (count - 7);\n      const y = yBeginning + row * dotSize * (count - 7);\n\n      if (options.cornersSquareOptions?.type) {\n        const cornersSquare = new QRCornerSquare({\n          context: canvasContext,\n          type: options.cornersSquareOptions?.type\n        });\n\n        canvasContext.beginPath();\n        cornersSquare.draw(x, y, cornersSquareSize, rotation);\n      } else {\n        const dot = new QRDot({\n          context: canvasContext,\n          type: options.dotsOptions.type\n        });\n\n        canvasContext.beginPath();\n\n        for (let i = 0; i < squareMask.length; i++) {\n          for (let j = 0; j < squareMask[i].length; j++) {\n            if (!squareMask[i]?.[j]) {\n              continue;\n            }\n\n            dot.draw(\n              x + i * dotSize,\n              y + j * dotSize,\n              dotSize,\n              (xOffset: number, yOffset: number): boolean => !!squareMask[i + xOffset]?.[j + yOffset]\n            );\n          }\n        }\n      }\n\n      if (options.cornersSquareOptions?.gradient) {\n        const gradientOptions = options.cornersSquareOptions.gradient;\n        const gradient = this._createGradient({\n          context: canvasContext,\n          options: gradientOptions,\n          additionalRotation: rotation,\n          x,\n          y,\n          size: cornersSquareSize\n        });\n\n        gradientOptions.colorStops.forEach(({ offset, color }: { offset: number; color: string }) => {\n          gradient.addColorStop(offset, color);\n        });\n\n        canvasContext.fillStyle = canvasContext.strokeStyle = gradient;\n      } else if (options.cornersSquareOptions?.color) {\n        canvasContext.fillStyle = canvasContext.strokeStyle = options.cornersSquareOptions.color;\n      }\n\n      canvasContext.fill(\"evenodd\");\n\n      if (options.cornersDotOptions?.type) {\n        const cornersDot = new QRCornerDot({\n          context: canvasContext,\n          type: options.cornersDotOptions?.type\n        });\n\n        canvasContext.beginPath();\n        cornersDot.draw(x + dotSize * 2, y + dotSize * 2, cornersDotSize, rotation);\n      } else {\n        const dot = new QRDot({\n          context: canvasContext,\n          type: options.dotsOptions.type\n        });\n\n        canvasContext.beginPath();\n\n        for (let i = 0; i < dotMask.length; i++) {\n          for (let j = 0; j < dotMask[i].length; j++) {\n            if (!dotMask[i]?.[j]) {\n              continue;\n            }\n\n            dot.draw(\n              x + i * dotSize,\n              y + j * dotSize,\n              dotSize,\n              (xOffset: number, yOffset: number): boolean => !!dotMask[i + xOffset]?.[j + yOffset]\n            );\n          }\n        }\n      }\n\n      if (options.cornersDotOptions?.gradient) {\n        const gradientOptions = options.cornersDotOptions.gradient;\n        const gradient = this._createGradient({\n          context: canvasContext,\n          options: gradientOptions,\n          additionalRotation: rotation,\n          x: x + dotSize * 2,\n          y: y + dotSize * 2,\n          size: cornersDotSize\n        });\n\n        gradientOptions.colorStops.forEach(({ offset, color }: { offset: number; color: string }) => {\n          gradient.addColorStop(offset, color);\n        });\n\n        canvasContext.fillStyle = canvasContext.strokeStyle = gradient;\n      } else if (options.cornersDotOptions?.color) {\n        canvasContext.fillStyle = canvasContext.strokeStyle = options.cornersDotOptions.color;\n      }\n\n      canvasContext.fill(\"evenodd\");\n    });\n  }\n\n  async loadImage(): Promise<void> {\n    const options = this._options;\n\n    if (!options.image) {\n      throw new Error(\"Image is not defined\");\n    }\n\n    // if (typeof options.imageOptions.crossOrigin === \"string\") {\n    //     image.crossOrigin = options.imageOptions.crossOrigin;\n    // }\n\n    this._image = await loadImage(options.image);\n  }\n\n  drawImage({\n    width,\n    height,\n    count,\n    dotSize\n  }: {\n    width: number;\n    height: number;\n    count: number;\n    dotSize: number;\n  }): void {\n    const canvasContext = this.context;\n\n    if (!canvasContext) {\n      throw \"canvasContext is not defined\";\n    }\n\n    if (!this._image) {\n      throw \"image is not defined\";\n    }\n\n    const options = this._options;\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\n    const dx = xBeginning + options.imageOptions.margin + (count * dotSize - width) / 2;\n    const dy = yBeginning + options.imageOptions.margin + (count * dotSize - height) / 2;\n    const dw = width - options.imageOptions.margin * 2;\n    const dh = height - options.imageOptions.margin * 2;\n\n    canvasContext.drawImage(this._image, dx, dy, dw < 0 ? 0 : dw, dh < 0 ? 0 : dh);\n  }\n\n  _createGradient({\n    context,\n    options,\n    additionalRotation,\n    x,\n    y,\n    size\n  }: {\n    context: CanvasRenderingContext2D;\n    options: Gradient;\n    additionalRotation: number;\n    x: number;\n    y: number;\n    size: number;\n  }): CanvasGradient {\n    let gradient;\n\n    if (options.type === gradientTypes.radial) {\n      gradient = context.createRadialGradient(x + size / 2, y + size / 2, 0, x + size / 2, y + size / 2, size / 2);\n    } else {\n      const rotation = ((options.rotation || 0) + additionalRotation) % (2 * Math.PI);\n      const positiveRotation = (rotation + 2 * Math.PI) % (2 * Math.PI);\n      let x0 = x + size / 2;\n      let y0 = y + size / 2;\n      let x1 = x + size / 2;\n      let y1 = y + size / 2;\n\n      if (\n        (positiveRotation >= 0 && positiveRotation <= 0.25 * Math.PI) ||\n        (positiveRotation > 1.75 * Math.PI && positiveRotation <= 2 * Math.PI)\n      ) {\n        x0 = x0 - size / 2;\n        y0 = y0 - (size / 2) * Math.tan(rotation);\n        x1 = x1 + size / 2;\n        y1 = y1 + (size / 2) * Math.tan(rotation);\n      } else if (positiveRotation > 0.25 * Math.PI && positiveRotation <= 0.75 * Math.PI) {\n        y0 = y0 - size / 2;\n        x0 = x0 - size / 2 / Math.tan(rotation);\n        y1 = y1 + size / 2;\n        x1 = x1 + size / 2 / Math.tan(rotation);\n      } else if (positiveRotation > 0.75 * Math.PI && positiveRotation <= 1.25 * Math.PI) {\n        x0 = x0 + size / 2;\n        y0 = y0 + (size / 2) * Math.tan(rotation);\n        x1 = x1 - size / 2;\n        y1 = y1 - (size / 2) * Math.tan(rotation);\n      } else if (positiveRotation > 1.25 * Math.PI && positiveRotation <= 1.75 * Math.PI) {\n        y0 = y0 + size / 2;\n        x0 = x0 + size / 2 / Math.tan(rotation);\n        y1 = y1 - size / 2;\n        x1 = x1 - size / 2 / Math.tan(rotation);\n      }\n\n      gradient = context.createLinearGradient(Math.round(x0), Math.round(y0), Math.round(x1), Math.round(y1));\n    }\n\n    return gradient;\n  }\n}\n","interface ImageSizeOptions {\n  originalHeight: number;\n  originalWidth: number;\n  maxHiddenDots: number;\n  maxHiddenAxisDots?: number;\n  dotSize: number;\n}\n\ninterface ImageSizeResult {\n  height: number;\n  width: number;\n  hideYDots: number;\n  hideXDots: number;\n}\n\nexport default function calculateImageSize({\n  originalHeight,\n  originalWidth,\n  maxHiddenDots,\n  maxHiddenAxisDots,\n  dotSize\n}: ImageSizeOptions): ImageSizeResult {\n  const hideDots = { x: 0, y: 0 };\n  const imageSize = { x: 0, y: 0 };\n\n  if (originalHeight <= 0 || originalWidth <= 0 || maxHiddenDots <= 0 || dotSize <= 0) {\n    return {\n      height: 0,\n      width: 0,\n      hideYDots: 0,\n      hideXDots: 0\n    };\n  }\n\n  const k = originalHeight / originalWidth;\n\n  //Getting the maximum possible axis hidden dots\n  hideDots.x = Math.floor(Math.sqrt(maxHiddenDots / k));\n  //The count of hidden dot's can't be less than 1\n  if (hideDots.x <= 0) hideDots.x = 1;\n  //Check the limit of the maximum allowed axis hidden dots\n  if (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.x) hideDots.x = maxHiddenAxisDots;\n  //The count of dots should be odd\n  if (hideDots.x % 2 === 0) hideDots.x--;\n  imageSize.x = hideDots.x * dotSize;\n  //Calculate opposite axis hidden dots based on axis value.\n  //The value will be odd.\n  //We use ceil to prevent dots covering by the image.\n  hideDots.y = 1 + 2 * Math.ceil((hideDots.x * k - 1) / 2);\n  imageSize.y = Math.round(imageSize.x * k);\n  //If the result dots count is bigger than max - then decrease size and calculate again\n  if (hideDots.y * hideDots.x > maxHiddenDots || (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.y)) {\n    if (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.y) {\n      hideDots.y = maxHiddenAxisDots;\n      if (hideDots.y % 2 === 0) hideDots.x--;\n    } else {\n      hideDots.y -= 2;\n    }\n    imageSize.y = hideDots.y * dotSize;\n    hideDots.x = 1 + 2 * Math.ceil((hideDots.y / k - 1) / 2);\n    imageSize.x = Math.round(imageSize.y / k);\n  }\n\n  return {\n    height: imageSize.y,\n    width: imageSize.x,\n    hideYDots: hideDots.y,\n    hideXDots: hideDots.x\n  };\n}\n","import { GradientTypes } from \"../types\";\n\nexport default {\n  radial: \"radial\",\n  linear: \"linear\"\n} as GradientTypes;\n","import { TypeNumber } from \"../types\";\n\ninterface TypesMap {\n  [key: number]: TypeNumber;\n}\n\nconst qrTypes: TypesMap = {};\n\nfor (let type = 0; type <= 40; type++) {\n  qrTypes[type] = type as TypeNumber;\n}\n\n// 0 types is autodetect\n\n// types = {\n//     0: 0,\n//     1: 1,\n//     ...\n//     40: 40\n// }\n\nexport default qrTypes;\n","import qrTypes from \"../constants/qrTypes\";\nimport errorCorrectionLevels from \"../constants/errorCorrectionLevels\";\nimport {\n  DotType,\n  GradientType,\n  CornerSquareType,\n  CornerDotType,\n  TypeNumber,\n  ErrorCorrectionLevel,\n  Mode\n} from \"../types\";\n\nexport type Gradient = {\n  type: GradientType;\n  rotation?: number;\n  colorStops: {\n    offset: number;\n    color: string;\n  }[];\n};\n\nexport type Options = {\n  width?: number;\n  height?: number;\n  data?: string;\n  image?: string;\n  qrOptions?: {\n    typeNumber?: TypeNumber;\n    mode?: Mode;\n    errorCorrectionLevel?: ErrorCorrectionLevel;\n  };\n  imageOptions?: {\n    hideBackgroundDots?: boolean;\n    imageSize?: number;\n    crossOrigin?: string;\n    margin?: number;\n  };\n  dotsOptions?: {\n    type?: DotType;\n    color?: string;\n    gradient?: Gradient;\n  };\n  cornersSquareOptions?: {\n    type?: CornerSquareType;\n    color?: string;\n    gradient?: Gradient;\n  };\n  cornersDotOptions?: {\n    type?: CornerDotType;\n    color?: string;\n    gradient?: Gradient;\n  };\n  backgroundOptions?: {\n    color?: string;\n    gradient?: Gradient;\n  };\n};\n\nexport interface RequiredOptions extends Options {\n  width: number;\n  height: number;\n  margin: number;\n  data: string;\n  qrOptions: {\n    typeNumber: TypeNumber;\n    mode?: Mode;\n    errorCorrectionLevel: ErrorCorrectionLevel;\n  };\n  imageOptions: {\n    hideBackgroundDots: boolean;\n    imageSize: number;\n    crossOrigin?: string;\n    margin: number;\n  };\n  dotsOptions: {\n    type: DotType;\n    color: string;\n    gradient?: Gradient;\n  };\n  backgroundOptions: {\n    color: string;\n    gradient?: Gradient;\n  };\n}\n\nconst defaultOptions: RequiredOptions = {\n  width: 300,\n  height: 300,\n  data: \"\",\n  margin: 0,\n  qrOptions: {\n    typeNumber: qrTypes[0],\n    mode: undefined,\n    errorCorrectionLevel: errorCorrectionLevels.Q\n  },\n  imageOptions: {\n    hideBackgroundDots: true,\n    imageSize: 0.4,\n    crossOrigin: undefined,\n    margin: 0\n  },\n  dotsOptions: {\n    type: \"square\",\n    color: \"#000\"\n  },\n  backgroundOptions: {\n    color: \"#fff\"\n  }\n};\n\nexport default defaultOptions;\n","import { ErrorCorrectionLevel } from \"../types\";\n\ninterface ErrorCorrectionLevels {\n  [key: string]: ErrorCorrectionLevel;\n}\n\nexport default {\n  L: \"L\",\n  M: \"M\",\n  Q: \"Q\",\n  H: \"H\"\n} as ErrorCorrectionLevels;\n","import { Gradient, RequiredOptions } from \"../core/QROptions\";\n\nfunction sanitizeGradient(gradient: Gradient): Gradient {\n  const newGradient = { ...gradient };\n\n  if (!newGradient.colorStops || !newGradient.colorStops.length) {\n    throw \"Field 'colorStops' is required in gradient\";\n  }\n\n  if (newGradient.rotation) {\n    newGradient.rotation = Number(newGradient.rotation);\n  } else {\n    newGradient.rotation = 0;\n  }\n\n  newGradient.colorStops = newGradient.colorStops.map((colorStop: { offset: number; color: string }) => ({\n    ...colorStop,\n    offset: Number(colorStop.offset)\n  }));\n\n  return newGradient;\n}\n\nexport default function sanitizeOptions(options: RequiredOptions): RequiredOptions {\n  const newOptions = { ...options };\n\n  newOptions.width = Number(newOptions.width);\n  newOptions.height = Number(newOptions.height);\n  newOptions.margin = Number(newOptions.margin);\n  newOptions.imageOptions = {\n    ...newOptions.imageOptions,\n    hideBackgroundDots: Boolean(newOptions.imageOptions.hideBackgroundDots),\n    imageSize: Number(newOptions.imageOptions.imageSize),\n    margin: Number(newOptions.imageOptions.margin)\n  };\n\n  if (newOptions.margin > Math.min(newOptions.width, newOptions.height)) {\n    newOptions.margin = Math.min(newOptions.width, newOptions.height);\n  }\n\n  newOptions.dotsOptions = {\n    ...newOptions.dotsOptions\n  };\n  if (newOptions.dotsOptions.gradient) {\n    newOptions.dotsOptions.gradient = sanitizeGradient(newOptions.dotsOptions.gradient);\n  }\n\n  if (newOptions.cornersSquareOptions) {\n    newOptions.cornersSquareOptions = {\n      ...newOptions.cornersSquareOptions\n    };\n    if (newOptions.cornersSquareOptions.gradient) {\n      newOptions.cornersSquareOptions.gradient = sanitizeGradient(newOptions.cornersSquareOptions.gradient);\n    }\n  }\n\n  if (newOptions.cornersDotOptions) {\n    newOptions.cornersDotOptions = {\n      ...newOptions.cornersDotOptions\n    };\n    if (newOptions.cornersDotOptions.gradient) {\n      newOptions.cornersDotOptions.gradient = sanitizeGradient(newOptions.cornersDotOptions.gradient);\n    }\n  }\n\n  if (newOptions.backgroundOptions) {\n    newOptions.backgroundOptions = {\n      ...newOptions.backgroundOptions\n    };\n    if (newOptions.backgroundOptions.gradient) {\n      newOptions.backgroundOptions.gradient = sanitizeGradient(newOptions.backgroundOptions.gradient);\n    }\n  }\n\n  return newOptions;\n}\n","import QRCodeStyling from \"./core/QRCodeStyling\";\nimport dotTypes from \"./constants/dotTypes\";\nimport cornerDotTypes from \"./constants/cornerDotTypes\";\nimport cornerSquareTypes from \"./constants/cornerSquareTypes\";\nimport errorCorrectionLevels from \"./constants/errorCorrectionLevels\";\nimport errorCorrectionPercents from \"./constants/errorCorrectionPercents\";\nimport modes from \"./constants/modes\";\nimport qrTypes from \"./constants/qrTypes\";\n\nexport { dotTypes, cornerDotTypes, cornerSquareTypes, errorCorrectionLevels, errorCorrectionPercents, modes, qrTypes };\nexport default QRCodeStyling;\n","import getMode from \"../tools/getMode\";\nimport mergeDeep from \"../tools/merge\";\nimport QRCanvas from \"./QRCanvas\";\nimport defaultOptions, { Options, RequiredOptions } from \"./QROptions\";\nimport sanitizeOptions from \"../tools/sanitizeOptions\";\nimport { QRCode } from \"../types\";\nimport qrcode from \"qrcode-generator\";\nimport { PngConfig } from \"canvas\";\n\nexport default class QRCodeStyling {\n  _options: RequiredOptions;\n  _canvas?: QRCanvas;\n  _qr?: QRCode;\n\n  constructor(options?: Partial<Options>) {\n    this._options = options ? sanitizeOptions(mergeDeep(defaultOptions, options) as RequiredOptions) : defaultOptions;\n  }\n\n  public async draw(options?: Partial<Options>): Promise<QRCodeStyling> {\n    this._options = options ? sanitizeOptions(mergeDeep(this._options, options) as RequiredOptions) : this._options;\n\n    if (!this._options.data) {\n      throw new Error(\"Data isn`t defined\");\n    }\n\n    this._qr = qrcode(this._options.qrOptions.typeNumber, this._options.qrOptions.errorCorrectionLevel);\n    this._qr.addData(this._options.data, this._options.qrOptions.mode || getMode(this._options.data));\n    this._qr.make();\n    this._canvas = new QRCanvas(this._options);\n    await this._canvas.drawQR(this._qr);\n    return this;\n  }\n\n  toPNGBuffer(options?: PngConfig): Buffer | undefined {\n    return this._canvas?.getCanvas().toBuffer(\"image/png\", options);\n  }\n}\n","import modes from \"../constants/modes\";\nimport { Mode } from \"../types\";\n\nexport default function getMode(data: string): Mode {\n  switch (true) {\n    case /^[0-9]*$/.test(data):\n      return modes.numeric;\n    case /^[0-9A-Z $%*+\\-./:]*$/.test(data):\n      return modes.alphanumeric;\n    default:\n      return modes.byte;\n  }\n}\n","import { Mode } from \"../types\";\n\ninterface Modes {\n  [key: string]: Mode;\n}\n\nexport default {\n  numeric: \"Numeric\",\n  alphanumeric: \"Alphanumeric\",\n  byte: \"Byte\",\n  kanji: \"Kanji\"\n} as Modes;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(984);\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}